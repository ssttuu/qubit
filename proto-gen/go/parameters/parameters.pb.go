// Code generated by protoc-gen-go. DO NOT EDIT.
// source: parameters/parameters.proto

/*
Package parameters is a generated protocol buffer package.

It is generated from these files:
	parameters/parameters.proto

It has these top-level messages:
	ParameterRoot
	GetParameterRootRequest
	CreateParameterRootRequest
	UpdateParameterRootRequest
	DeleteParameterRootRequest
*/
package parameters

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ParameterRoot struct {
	OperatorId string   `protobuf:"bytes,1,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
	Children   []byte   `protobuf:"bytes,2,opt,name=children,proto3" json:"children,omitempty"`
	Order      []string `protobuf:"bytes,3,rep,name=order" json:"order,omitempty"`
}

func (m *ParameterRoot) Reset()                    { *m = ParameterRoot{} }
func (m *ParameterRoot) String() string            { return proto.CompactTextString(m) }
func (*ParameterRoot) ProtoMessage()               {}
func (*ParameterRoot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ParameterRoot) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

func (m *ParameterRoot) GetChildren() []byte {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *ParameterRoot) GetOrder() []string {
	if m != nil {
		return m.Order
	}
	return nil
}

type GetParameterRootRequest struct {
	OperatorId string `protobuf:"bytes,1,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
}

func (m *GetParameterRootRequest) Reset()                    { *m = GetParameterRootRequest{} }
func (m *GetParameterRootRequest) String() string            { return proto.CompactTextString(m) }
func (*GetParameterRootRequest) ProtoMessage()               {}
func (*GetParameterRootRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetParameterRootRequest) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

type CreateParameterRootRequest struct {
	OperatorId    string         `protobuf:"bytes,1,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
	ParameterRoot *ParameterRoot `protobuf:"bytes,2,opt,name=parameter_root,json=parameterRoot" json:"parameter_root,omitempty"`
}

func (m *CreateParameterRootRequest) Reset()                    { *m = CreateParameterRootRequest{} }
func (m *CreateParameterRootRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateParameterRootRequest) ProtoMessage()               {}
func (*CreateParameterRootRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateParameterRootRequest) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

func (m *CreateParameterRootRequest) GetParameterRoot() *ParameterRoot {
	if m != nil {
		return m.ParameterRoot
	}
	return nil
}

type UpdateParameterRootRequest struct {
	OperatorId    string         `protobuf:"bytes,1,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
	ParameterRoot *ParameterRoot `protobuf:"bytes,2,opt,name=parameter_root,json=parameterRoot" json:"parameter_root,omitempty"`
}

func (m *UpdateParameterRootRequest) Reset()                    { *m = UpdateParameterRootRequest{} }
func (m *UpdateParameterRootRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateParameterRootRequest) ProtoMessage()               {}
func (*UpdateParameterRootRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UpdateParameterRootRequest) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

func (m *UpdateParameterRootRequest) GetParameterRoot() *ParameterRoot {
	if m != nil {
		return m.ParameterRoot
	}
	return nil
}

type DeleteParameterRootRequest struct {
	OperatorId string `protobuf:"bytes,1,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
}

func (m *DeleteParameterRootRequest) Reset()                    { *m = DeleteParameterRootRequest{} }
func (m *DeleteParameterRootRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteParameterRootRequest) ProtoMessage()               {}
func (*DeleteParameterRootRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DeleteParameterRootRequest) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

func init() {
	proto.RegisterType((*ParameterRoot)(nil), "parameters.ParameterRoot")
	proto.RegisterType((*GetParameterRootRequest)(nil), "parameters.GetParameterRootRequest")
	proto.RegisterType((*CreateParameterRootRequest)(nil), "parameters.CreateParameterRootRequest")
	proto.RegisterType((*UpdateParameterRootRequest)(nil), "parameters.UpdateParameterRootRequest")
	proto.RegisterType((*DeleteParameterRootRequest)(nil), "parameters.DeleteParameterRootRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Parameters service

type ParametersClient interface {
	Get(ctx context.Context, in *GetParameterRootRequest, opts ...grpc.CallOption) (*ParameterRoot, error)
	Create(ctx context.Context, in *CreateParameterRootRequest, opts ...grpc.CallOption) (*ParameterRoot, error)
	Update(ctx context.Context, in *UpdateParameterRootRequest, opts ...grpc.CallOption) (*ParameterRoot, error)
	Delete(ctx context.Context, in *DeleteParameterRootRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type parametersClient struct {
	cc *grpc.ClientConn
}

func NewParametersClient(cc *grpc.ClientConn) ParametersClient {
	return &parametersClient{cc}
}

func (c *parametersClient) Get(ctx context.Context, in *GetParameterRootRequest, opts ...grpc.CallOption) (*ParameterRoot, error) {
	out := new(ParameterRoot)
	err := grpc.Invoke(ctx, "/parameters.Parameters/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *parametersClient) Create(ctx context.Context, in *CreateParameterRootRequest, opts ...grpc.CallOption) (*ParameterRoot, error) {
	out := new(ParameterRoot)
	err := grpc.Invoke(ctx, "/parameters.Parameters/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *parametersClient) Update(ctx context.Context, in *UpdateParameterRootRequest, opts ...grpc.CallOption) (*ParameterRoot, error) {
	out := new(ParameterRoot)
	err := grpc.Invoke(ctx, "/parameters.Parameters/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *parametersClient) Delete(ctx context.Context, in *DeleteParameterRootRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/parameters.Parameters/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Parameters service

type ParametersServer interface {
	Get(context.Context, *GetParameterRootRequest) (*ParameterRoot, error)
	Create(context.Context, *CreateParameterRootRequest) (*ParameterRoot, error)
	Update(context.Context, *UpdateParameterRootRequest) (*ParameterRoot, error)
	Delete(context.Context, *DeleteParameterRootRequest) (*google_protobuf1.Empty, error)
}

func RegisterParametersServer(s *grpc.Server, srv ParametersServer) {
	s.RegisterService(&_Parameters_serviceDesc, srv)
}

func _Parameters_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetParameterRootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParametersServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parameters.Parameters/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParametersServer).Get(ctx, req.(*GetParameterRootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Parameters_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateParameterRootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParametersServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parameters.Parameters/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParametersServer).Create(ctx, req.(*CreateParameterRootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Parameters_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateParameterRootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParametersServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parameters.Parameters/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParametersServer).Update(ctx, req.(*UpdateParameterRootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Parameters_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteParameterRootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParametersServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parameters.Parameters/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParametersServer).Delete(ctx, req.(*DeleteParameterRootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Parameters_serviceDesc = grpc.ServiceDesc{
	ServiceName: "parameters.Parameters",
	HandlerType: (*ParametersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Parameters_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Parameters_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Parameters_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Parameters_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "parameters/parameters.proto",
}

func init() { proto.RegisterFile("parameters/parameters.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 364 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xc4, 0x93, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x69, 0xab, 0x45, 0xa7, 0xd6, 0xc3, 0x22, 0x5a, 0xb7, 0x82, 0x25, 0x42, 0x29, 0x1e,
	0xb2, 0x58, 0x2f, 0x52, 0x50, 0x04, 0x15, 0xf1, 0x26, 0x01, 0xcf, 0x65, 0x6b, 0xc6, 0x1a, 0x68,
	0xb3, 0xeb, 0x66, 0x2b, 0x8a, 0x88, 0xe0, 0xd5, 0xa3, 0x27, 0x9f, 0xcb, 0x57, 0xf0, 0x41, 0x4c,
	0x93, 0xa6, 0xdd, 0x08, 0xd1, 0x92, 0x8b, 0xb7, 0xcc, 0x4e, 0xfe, 0xf9, 0x3f, 0xf6, 0xdf, 0x81,
	0xba, 0xe4, 0x8a, 0x0f, 0x51, 0xa3, 0x0a, 0xd8, 0xec, 0xd3, 0x96, 0x4a, 0x68, 0x41, 0x60, 0x76,
	0x42, 0xb7, 0xfa, 0x42, 0xf4, 0x07, 0xc8, 0xb8, 0xf4, 0x18, 0xf7, 0x7d, 0xa1, 0xb9, 0xf6, 0x84,
	0x3f, 0xf9, 0x93, 0xd6, 0x27, 0xdd, 0xa8, 0xea, 0x8d, 0x6e, 0x18, 0x0e, 0xa5, 0x7e, 0x8c, 0x9b,
	0x56, 0x0f, 0xaa, 0x97, 0xc9, 0x20, 0x47, 0x08, 0x4d, 0xb6, 0xa1, 0x22, 0x24, 0x2a, 0xae, 0x85,
	0xea, 0x7a, 0x6e, 0xad, 0xd0, 0x28, 0xb4, 0x96, 0x1d, 0x48, 0x8e, 0x2e, 0x5c, 0x42, 0x61, 0xe9,
	0xfa, 0xd6, 0x1b, 0xb8, 0x0a, 0xfd, 0x5a, 0x31, 0xec, 0xae, 0x38, 0xd3, 0x9a, 0xac, 0xc1, 0xa2,
	0x50, 0x2e, 0xaa, 0x5a, 0xa9, 0x51, 0x0a, 0x65, 0x71, 0x61, 0x75, 0x60, 0xe3, 0x1c, 0x75, 0xca,
	0xc6, 0xc1, 0xbb, 0x11, 0x06, 0x7f, 0xbb, 0x59, 0x2f, 0x40, 0x4f, 0x14, 0x72, 0x8d, 0xb9, 0xe4,
	0xe4, 0x18, 0x56, 0xa7, 0xf7, 0xd4, 0x55, 0xa1, 0x32, 0x42, 0xae, 0xb4, 0x37, 0x6d, 0xe3, 0x42,
	0xd3, 0xa3, 0xab, 0xd2, 0x2c, 0xc7, 0x00, 0x57, 0xd2, 0xfd, 0x47, 0x80, 0x43, 0xa0, 0xa7, 0x38,
	0xc0, 0x9c, 0x00, 0xed, 0x8f, 0x05, 0x80, 0xa9, 0x32, 0x20, 0x23, 0x28, 0x85, 0x59, 0x90, 0x1d,
	0xd3, 0x3e, 0x23, 0x1c, 0x9a, 0xcd, 0x68, 0xd9, 0xaf, 0x9f, 0x5f, 0xef, 0xc5, 0x16, 0x69, 0xb2,
	0xfb, 0x3d, 0x96, 0xb8, 0x05, 0xec, 0xc9, 0x60, 0x79, 0x36, 0xde, 0x2c, 0x79, 0x2b, 0x40, 0x39,
	0xce, 0x91, 0x34, 0xcd, 0xa9, 0xd9, 0xd9, 0xfe, 0xe6, 0x7e, 0x14, 0xb9, 0x1f, 0x58, 0x73, 0xba,
	0x77, 0x7e, 0x44, 0x10, 0xd1, 0xc4, 0xa1, 0xa6, 0x69, 0xb2, 0x83, 0x9e, 0x83, 0x86, 0xe6, 0xa5,
	0x79, 0x80, 0x72, 0x1c, 0x70, 0x1a, 0x26, 0x3b, 0x74, 0xba, 0x6e, 0xc7, 0x2b, 0x6d, 0x27, 0x2b,
	0x6d, 0x9f, 0x8d, 0x57, 0x3a, 0x49, 0x65, 0x77, 0x4e, 0x92, 0x5e, 0x39, 0xd2, 0xef, 0x7f, 0x07,
	0x00, 0x00, 0xff, 0xff, 0x11, 0xf4, 0x46, 0x5d, 0x69, 0x04, 0x00, 0x00,
}
