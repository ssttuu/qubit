// Code generated by protoc-gen-go. DO NOT EDIT.
// source: parameters/parameters.proto

/*
Package parameters is a generated protocol buffer package.

It is generated from these files:
	parameters/parameters.proto

It has these top-level messages:
	Component
	Parameter
	ListParametersRequest
	ListParametersResponse
	GetParameterRequest
	CreateParameterRequest
	UpdateParameterRequest
	DeleteParameterRequest
*/
package parameters

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Component struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// TODO: use oneof
	Value float64 `protobuf:"fixed64,2,opt,name=value" json:"value,omitempty"`
}

func (m *Component) Reset()                    { *m = Component{} }
func (m *Component) String() string            { return proto.CompactTextString(m) }
func (*Component) ProtoMessage()               {}
func (*Component) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Component) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Component) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Parameter struct {
	Id         string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Labels     map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Components []*Component      `protobuf:"bytes,3,rep,name=components" json:"components,omitempty"`
}

func (m *Parameter) Reset()                    { *m = Parameter{} }
func (m *Parameter) String() string            { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()               {}
func (*Parameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Parameter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Parameter) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Parameter) GetComponents() []*Component {
	if m != nil {
		return m.Components
	}
	return nil
}

type ListParametersRequest struct {
	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId" json:"organization_id,omitempty"`
	SceneId        string `protobuf:"bytes,2,opt,name=scene_id,json=sceneId" json:"scene_id,omitempty"`
	OperatorId     string `protobuf:"bytes,3,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
	PageSize       int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken      string `protobuf:"bytes,5,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListParametersRequest) Reset()                    { *m = ListParametersRequest{} }
func (m *ListParametersRequest) String() string            { return proto.CompactTextString(m) }
func (*ListParametersRequest) ProtoMessage()               {}
func (*ListParametersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListParametersRequest) GetOrganizationId() string {
	if m != nil {
		return m.OrganizationId
	}
	return ""
}

func (m *ListParametersRequest) GetSceneId() string {
	if m != nil {
		return m.SceneId
	}
	return ""
}

func (m *ListParametersRequest) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

func (m *ListParametersRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListParametersRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListParametersResponse struct {
	Parameters    []*Parameter `protobuf:"bytes,1,rep,name=parameters" json:"parameters,omitempty"`
	NextPageToken string       `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListParametersResponse) Reset()                    { *m = ListParametersResponse{} }
func (m *ListParametersResponse) String() string            { return proto.CompactTextString(m) }
func (*ListParametersResponse) ProtoMessage()               {}
func (*ListParametersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListParametersResponse) GetParameters() []*Parameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *ListParametersResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetParameterRequest struct {
	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId" json:"organization_id,omitempty"`
	SceneId        string `protobuf:"bytes,2,opt,name=scene_id,json=sceneId" json:"scene_id,omitempty"`
	OperatorId     string `protobuf:"bytes,3,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
	ParameterId    string `protobuf:"bytes,4,opt,name=parameter_id,json=parameterId" json:"parameter_id,omitempty"`
}

func (m *GetParameterRequest) Reset()                    { *m = GetParameterRequest{} }
func (m *GetParameterRequest) String() string            { return proto.CompactTextString(m) }
func (*GetParameterRequest) ProtoMessage()               {}
func (*GetParameterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetParameterRequest) GetOrganizationId() string {
	if m != nil {
		return m.OrganizationId
	}
	return ""
}

func (m *GetParameterRequest) GetSceneId() string {
	if m != nil {
		return m.SceneId
	}
	return ""
}

func (m *GetParameterRequest) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

func (m *GetParameterRequest) GetParameterId() string {
	if m != nil {
		return m.ParameterId
	}
	return ""
}

type CreateParameterRequest struct {
	OrganizationId string     `protobuf:"bytes,1,opt,name=organization_id,json=organizationId" json:"organization_id,omitempty"`
	SceneId        string     `protobuf:"bytes,2,opt,name=scene_id,json=sceneId" json:"scene_id,omitempty"`
	OperatorId     string     `protobuf:"bytes,3,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
	Parameter      *Parameter `protobuf:"bytes,4,opt,name=parameter" json:"parameter,omitempty"`
}

func (m *CreateParameterRequest) Reset()                    { *m = CreateParameterRequest{} }
func (m *CreateParameterRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateParameterRequest) ProtoMessage()               {}
func (*CreateParameterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateParameterRequest) GetOrganizationId() string {
	if m != nil {
		return m.OrganizationId
	}
	return ""
}

func (m *CreateParameterRequest) GetSceneId() string {
	if m != nil {
		return m.SceneId
	}
	return ""
}

func (m *CreateParameterRequest) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

func (m *CreateParameterRequest) GetParameter() *Parameter {
	if m != nil {
		return m.Parameter
	}
	return nil
}

type UpdateParameterRequest struct {
	OrganizationId string     `protobuf:"bytes,1,opt,name=organization_id,json=organizationId" json:"organization_id,omitempty"`
	SceneId        string     `protobuf:"bytes,2,opt,name=scene_id,json=sceneId" json:"scene_id,omitempty"`
	OperatorId     string     `protobuf:"bytes,3,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
	ParameterId    string     `protobuf:"bytes,4,opt,name=parameter_id,json=parameterId" json:"parameter_id,omitempty"`
	Parameter      *Parameter `protobuf:"bytes,5,opt,name=parameter" json:"parameter,omitempty"`
}

func (m *UpdateParameterRequest) Reset()                    { *m = UpdateParameterRequest{} }
func (m *UpdateParameterRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateParameterRequest) ProtoMessage()               {}
func (*UpdateParameterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateParameterRequest) GetOrganizationId() string {
	if m != nil {
		return m.OrganizationId
	}
	return ""
}

func (m *UpdateParameterRequest) GetSceneId() string {
	if m != nil {
		return m.SceneId
	}
	return ""
}

func (m *UpdateParameterRequest) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

func (m *UpdateParameterRequest) GetParameterId() string {
	if m != nil {
		return m.ParameterId
	}
	return ""
}

func (m *UpdateParameterRequest) GetParameter() *Parameter {
	if m != nil {
		return m.Parameter
	}
	return nil
}

type DeleteParameterRequest struct {
	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId" json:"organization_id,omitempty"`
	SceneId        string `protobuf:"bytes,2,opt,name=scene_id,json=sceneId" json:"scene_id,omitempty"`
	OperatorId     string `protobuf:"bytes,3,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
	ParameterId    string `protobuf:"bytes,4,opt,name=parameter_id,json=parameterId" json:"parameter_id,omitempty"`
}

func (m *DeleteParameterRequest) Reset()                    { *m = DeleteParameterRequest{} }
func (m *DeleteParameterRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteParameterRequest) ProtoMessage()               {}
func (*DeleteParameterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteParameterRequest) GetOrganizationId() string {
	if m != nil {
		return m.OrganizationId
	}
	return ""
}

func (m *DeleteParameterRequest) GetSceneId() string {
	if m != nil {
		return m.SceneId
	}
	return ""
}

func (m *DeleteParameterRequest) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

func (m *DeleteParameterRequest) GetParameterId() string {
	if m != nil {
		return m.ParameterId
	}
	return ""
}

func init() {
	proto.RegisterType((*Component)(nil), "parameters.Component")
	proto.RegisterType((*Parameter)(nil), "parameters.Parameter")
	proto.RegisterType((*ListParametersRequest)(nil), "parameters.ListParametersRequest")
	proto.RegisterType((*ListParametersResponse)(nil), "parameters.ListParametersResponse")
	proto.RegisterType((*GetParameterRequest)(nil), "parameters.GetParameterRequest")
	proto.RegisterType((*CreateParameterRequest)(nil), "parameters.CreateParameterRequest")
	proto.RegisterType((*UpdateParameterRequest)(nil), "parameters.UpdateParameterRequest")
	proto.RegisterType((*DeleteParameterRequest)(nil), "parameters.DeleteParameterRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Parameters service

type ParametersClient interface {
	List(ctx context.Context, in *ListParametersRequest, opts ...grpc.CallOption) (*ListParametersResponse, error)
	Get(ctx context.Context, in *GetParameterRequest, opts ...grpc.CallOption) (*Parameter, error)
	Create(ctx context.Context, in *CreateParameterRequest, opts ...grpc.CallOption) (*Parameter, error)
	Update(ctx context.Context, in *UpdateParameterRequest, opts ...grpc.CallOption) (*Parameter, error)
	Delete(ctx context.Context, in *DeleteParameterRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type parametersClient struct {
	cc *grpc.ClientConn
}

func NewParametersClient(cc *grpc.ClientConn) ParametersClient {
	return &parametersClient{cc}
}

func (c *parametersClient) List(ctx context.Context, in *ListParametersRequest, opts ...grpc.CallOption) (*ListParametersResponse, error) {
	out := new(ListParametersResponse)
	err := grpc.Invoke(ctx, "/parameters.Parameters/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *parametersClient) Get(ctx context.Context, in *GetParameterRequest, opts ...grpc.CallOption) (*Parameter, error) {
	out := new(Parameter)
	err := grpc.Invoke(ctx, "/parameters.Parameters/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *parametersClient) Create(ctx context.Context, in *CreateParameterRequest, opts ...grpc.CallOption) (*Parameter, error) {
	out := new(Parameter)
	err := grpc.Invoke(ctx, "/parameters.Parameters/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *parametersClient) Update(ctx context.Context, in *UpdateParameterRequest, opts ...grpc.CallOption) (*Parameter, error) {
	out := new(Parameter)
	err := grpc.Invoke(ctx, "/parameters.Parameters/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *parametersClient) Delete(ctx context.Context, in *DeleteParameterRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/parameters.Parameters/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Parameters service

type ParametersServer interface {
	List(context.Context, *ListParametersRequest) (*ListParametersResponse, error)
	Get(context.Context, *GetParameterRequest) (*Parameter, error)
	Create(context.Context, *CreateParameterRequest) (*Parameter, error)
	Update(context.Context, *UpdateParameterRequest) (*Parameter, error)
	Delete(context.Context, *DeleteParameterRequest) (*google_protobuf1.Empty, error)
}

func RegisterParametersServer(s *grpc.Server, srv ParametersServer) {
	s.RegisterService(&_Parameters_serviceDesc, srv)
}

func _Parameters_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListParametersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParametersServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parameters.Parameters/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParametersServer).List(ctx, req.(*ListParametersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Parameters_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetParameterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParametersServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parameters.Parameters/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParametersServer).Get(ctx, req.(*GetParameterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Parameters_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateParameterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParametersServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parameters.Parameters/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParametersServer).Create(ctx, req.(*CreateParameterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Parameters_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateParameterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParametersServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parameters.Parameters/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParametersServer).Update(ctx, req.(*UpdateParameterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Parameters_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteParameterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParametersServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parameters.Parameters/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParametersServer).Delete(ctx, req.(*DeleteParameterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Parameters_serviceDesc = grpc.ServiceDesc{
	ServiceName: "parameters.Parameters",
	HandlerType: (*ParametersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Parameters_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Parameters_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Parameters_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Parameters_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Parameters_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "parameters/parameters.proto",
}

func init() { proto.RegisterFile("parameters/parameters.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 640 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x96, 0xbf, 0x6f, 0xd3, 0x40,
	0x14, 0xc7, 0xe5, 0xa4, 0x49, 0x9b, 0x17, 0x68, 0xd1, 0x41, 0xab, 0xe0, 0x82, 0x4a, 0x3d, 0x40,
	0xc5, 0x60, 0x8b, 0x56, 0x48, 0xb4, 0x6b, 0xa9, 0x50, 0xa5, 0x0e, 0x95, 0xa1, 0x62, 0x42, 0x91,
	0xd3, 0xbc, 0x06, 0xab, 0x8e, 0xcf, 0xb5, 0x2f, 0x94, 0xb4, 0xca, 0xc2, 0xce, 0xc4, 0x8c, 0xc4,
	0x0e, 0x2c, 0x4c, 0x0c, 0xfc, 0x01, 0xec, 0x88, 0xff, 0x80, 0x3f, 0x84, 0xbb, 0xf3, 0xaf, 0x73,
	0xeb, 0x00, 0x4b, 0x53, 0x36, 0xdf, 0xfb, 0x91, 0xf7, 0xf9, 0x7e, 0xed, 0xe7, 0x18, 0x16, 0x03,
	0x27, 0x74, 0xfa, 0xc8, 0x30, 0x8c, 0xac, 0xfc, 0xd2, 0x0c, 0x42, 0xca, 0x28, 0x81, 0x3c, 0xa2,
	0xdf, 0xea, 0x51, 0xda, 0xf3, 0xd0, 0x72, 0x02, 0xd7, 0x72, 0x7c, 0x9f, 0x32, 0x87, 0xb9, 0xd4,
	0x4f, 0x2a, 0xf5, 0xc5, 0x24, 0x2b, 0x4f, 0x9d, 0xc1, 0x81, 0x85, 0xfd, 0x80, 0x0d, 0xe3, 0xa4,
	0xf1, 0x00, 0x1a, 0x9b, 0xb4, 0x1f, 0x50, 0x1f, 0x7d, 0x46, 0x66, 0xa1, 0xe2, 0x76, 0x5b, 0xda,
	0x1d, 0x6d, 0xa5, 0x61, 0xf3, 0x2b, 0x72, 0x03, 0x6a, 0xaf, 0x1c, 0x6f, 0x80, 0xad, 0x0a, 0x0f,
	0x69, 0x76, 0x7c, 0x30, 0xbe, 0x6b, 0xd0, 0xd8, 0x4d, 0x87, 0x9f, 0xeb, 0x59, 0x87, 0xba, 0xe7,
	0x74, 0xd0, 0x8b, 0x78, 0x53, 0x75, 0xa5, 0xb9, 0xba, 0x6c, 0x2a, 0xe8, 0x59, 0x9b, 0xb9, 0x23,
	0x6b, 0xb6, 0x7c, 0x16, 0x0e, 0xed, 0xa4, 0x81, 0x3c, 0x04, 0xd8, 0x4f, 0x59, 0xa2, 0x56, 0x55,
	0xb6, 0xcf, 0xab, 0xed, 0x19, 0xa9, 0xad, 0x14, 0xea, 0xeb, 0xd0, 0x54, 0x7e, 0x8d, 0x5c, 0x83,
	0xea, 0x21, 0x0e, 0x13, 0x22, 0x71, 0x59, 0x94, 0xd1, 0x48, 0x64, 0x6c, 0x54, 0x1e, 0x69, 0xc6,
	0x57, 0x0d, 0xe6, 0x77, 0xdc, 0x88, 0x65, 0x5c, 0x91, 0x8d, 0x47, 0x03, 0x8c, 0x18, 0xb9, 0x07,
	0x73, 0x34, 0xec, 0x39, 0xbe, 0x7b, 0x22, 0xbd, 0x6c, 0x67, 0x1a, 0x67, 0xd5, 0xf0, 0x76, 0x97,
	0xdc, 0x84, 0x99, 0x68, 0x1f, 0x7d, 0x14, 0x15, 0xf1, 0xef, 0x4f, 0xcb, 0x33, 0x4f, 0x2d, 0x41,
	0x93, 0x06, 0x18, 0x3a, 0x8c, 0x86, 0x22, 0x5b, 0x95, 0x59, 0x48, 0x43, 0xbc, 0x60, 0x11, 0x1a,
	0x81, 0xd3, 0xc3, 0x76, 0xe4, 0x9e, 0x60, 0x6b, 0x8a, 0xa7, 0x6b, 0xf6, 0x8c, 0x08, 0x3c, 0xe5,
	0x67, 0x72, 0x1b, 0x40, 0x26, 0x19, 0x3d, 0x44, 0xbf, 0x55, 0x93, 0xcd, 0xb2, 0xfc, 0x99, 0x08,
	0x18, 0xc7, 0xb0, 0x70, 0x96, 0x3c, 0xe2, 0x8e, 0x44, 0x28, 0x6c, 0xcc, 0x3d, 0xe3, 0xd4, 0xe7,
	0x6c, 0xcc, 0x7a, 0x6c, 0xa5, 0x90, 0xdc, 0x85, 0x39, 0x1f, 0x5f, 0xb3, 0xb6, 0x32, 0x34, 0xd6,
	0x73, 0x55, 0x84, 0x77, 0xb3, 0xc1, 0xef, 0x35, 0xb8, 0xfe, 0x04, 0xf3, 0xc1, 0x13, 0x75, 0x6c,
	0x19, 0xae, 0x64, 0xc8, 0xa2, 0x62, 0x4a, 0x56, 0x34, 0xb3, 0xd8, 0x76, 0xd7, 0xf8, 0xa2, 0xc1,
	0xc2, 0x66, 0x88, 0x0e, 0xc3, 0xcb, 0x41, 0x5c, 0x13, 0x37, 0x35, 0x19, 0x2c, 0xf9, 0xc6, 0xba,
	0x9f, 0xd7, 0x19, 0x3f, 0x39, 0xf4, 0x5e, 0xd0, 0xbd, 0x34, 0xe8, 0xbf, 0xfb, 0x5a, 0xd4, 0x55,
	0xfb, 0x47, 0x5d, 0x1f, 0xb8, 0xae, 0xc7, 0xe8, 0xe1, 0xff, 0xab, 0x6b, 0xf5, 0xed, 0x34, 0x40,
	0xbe, 0x45, 0xe4, 0x93, 0x06, 0x53, 0x62, 0xb1, 0x48, 0xe1, 0xc5, 0x55, 0xfa, 0x92, 0xd0, 0x8d,
	0x3f, 0x95, 0xc4, 0xdb, 0x68, 0xbc, 0x78, 0xf3, 0xe3, 0xd7, 0xbb, 0xca, 0x73, 0xb2, 0x67, 0xa9,
	0xb2, 0x22, 0xeb, 0xf4, 0x8c, 0xf8, 0x91, 0x25, 0x45, 0xf1, 0x44, 0x2a, 0x76, 0x64, 0xa5, 0x42,
	0x44, 0x75, 0x2e, 0x73, 0xa4, 0xfc, 0x19, 0x90, 0x8f, 0x1a, 0x54, 0xf9, 0x36, 0x92, 0x25, 0x15,
	0xa5, 0x64, 0x3d, 0xf5, 0xf2, 0x7b, 0x65, 0x78, 0x12, 0xef, 0x80, 0x74, 0x2f, 0x04, 0xcf, 0x3a,
	0x55, 0xdd, 0x1f, 0x91, 0xcf, 0x1a, 0xd4, 0xe3, 0xdd, 0x24, 0x05, 0xef, 0xca, 0xf7, 0x75, 0x1c,
	0xf3, 0x4b, 0xc9, 0xdc, 0x31, 0x2e, 0xc6, 0xd2, 0x8d, 0xfc, 0xf1, 0x25, 0xdf, 0x38, 0x6f, 0xbc,
	0x96, 0x45, 0xde, 0xf2, 0x55, 0x1d, 0xc7, 0x7b, 0x2c, 0x79, 0x8f, 0xf4, 0x89, 0x78, 0xac, 0xe2,
	0xf3, 0x57, 0x61, 0x3d, 0xde, 0xbe, 0x22, 0x7e, 0xf9, 0x46, 0xea, 0x0b, 0x66, 0xfc, 0xa5, 0x60,
	0xa6, 0x5f, 0x0a, 0xe6, 0x96, 0xf8, 0x52, 0x48, 0x9f, 0x91, 0xfb, 0x13, 0xe1, 0xef, 0xd4, 0xe5,
	0xf4, 0xb5, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x27, 0x1a, 0x4b, 0x26, 0xfe, 0x08, 0x00, 0x00,
}
