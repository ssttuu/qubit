// Code generated by protoc-gen-go. DO NOT EDIT.
// source: computation_renders/computation_renders.proto

/*
Package computation_renders is a generated protocol buffer package.

It is generated from these files:
	computation_renders/computation_renders.proto

It has these top-level messages:
	ComputationRenderRequest
	ComputationRenderResponse
*/
package computation_renders

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import geometry "github.com/stupschwartz/qubit/proto-gen/go/geometry"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ComputationRenderRequest struct {
	OperatorId  string                  `protobuf:"bytes,1,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
	Time        float64                 `protobuf:"fixed64,2,opt,name=time" json:"time,omitempty"`
	BoundingBox *geometry.BoundingBox2D `protobuf:"bytes,3,opt,name=bounding_box,json=boundingBox" json:"bounding_box,omitempty"`
}

func (m *ComputationRenderRequest) Reset()                    { *m = ComputationRenderRequest{} }
func (m *ComputationRenderRequest) String() string            { return proto.CompactTextString(m) }
func (*ComputationRenderRequest) ProtoMessage()               {}
func (*ComputationRenderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ComputationRenderRequest) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

func (m *ComputationRenderRequest) GetTime() float64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ComputationRenderRequest) GetBoundingBox() *geometry.BoundingBox2D {
	if m != nil {
		return m.BoundingBox
	}
	return nil
}

type ComputationRenderResponse struct {
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
}

func (m *ComputationRenderResponse) Reset()                    { *m = ComputationRenderResponse{} }
func (m *ComputationRenderResponse) String() string            { return proto.CompactTextString(m) }
func (*ComputationRenderResponse) ProtoMessage()               {}
func (*ComputationRenderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ComputationRenderResponse) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func init() {
	proto.RegisterType((*ComputationRenderRequest)(nil), "computation_renders.ComputationRenderRequest")
	proto.RegisterType((*ComputationRenderResponse)(nil), "computation_renders.ComputationRenderResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ComputationRenders service

type ComputationRendersClient interface {
	Render(ctx context.Context, in *ComputationRenderRequest, opts ...grpc.CallOption) (*ComputationRenderResponse, error)
}

type computationRendersClient struct {
	cc *grpc.ClientConn
}

func NewComputationRendersClient(cc *grpc.ClientConn) ComputationRendersClient {
	return &computationRendersClient{cc}
}

func (c *computationRendersClient) Render(ctx context.Context, in *ComputationRenderRequest, opts ...grpc.CallOption) (*ComputationRenderResponse, error) {
	out := new(ComputationRenderResponse)
	err := grpc.Invoke(ctx, "/computation_renders.ComputationRenders/Render", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ComputationRenders service

type ComputationRendersServer interface {
	Render(context.Context, *ComputationRenderRequest) (*ComputationRenderResponse, error)
}

func RegisterComputationRendersServer(s *grpc.Server, srv ComputationRendersServer) {
	s.RegisterService(&_ComputationRenders_serviceDesc, srv)
}

func _ComputationRenders_Render_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ComputationRenderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputationRendersServer).Render(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/computation_renders.ComputationRenders/Render",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputationRendersServer).Render(ctx, req.(*ComputationRenderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ComputationRenders_serviceDesc = grpc.ServiceDesc{
	ServiceName: "computation_renders.ComputationRenders",
	HandlerType: (*ComputationRendersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Render",
			Handler:    _ComputationRenders_Render_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "computation_renders/computation_renders.proto",
}

func init() { proto.RegisterFile("computation_renders/computation_renders.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x09, 0xa0, 0x4a, 0x5c, 0x98, 0x8e, 0xa1, 0xa1, 0x0b, 0x28, 0x13, 0x4b, 0x53, 0x29,
	0x6c, 0x88, 0xa9, 0xb0, 0x74, 0xf5, 0x1f, 0x88, 0x9a, 0xfa, 0x54, 0x79, 0x88, 0xcf, 0x9c, 0x6d,
	0xa9, 0x4c, 0xfc, 0x00, 0xfe, 0x34, 0x25, 0x21, 0x04, 0x09, 0x23, 0xb1, 0x3d, 0xbf, 0xf7, 0x4e,
	0xfe, 0xee, 0x60, 0xb9, 0xe3, 0xce, 0xc5, 0xb0, 0x0d, 0x86, 0x6d, 0x23, 0x64, 0x35, 0x89, 0x5f,
	0x25, 0xbc, 0xca, 0x09, 0x07, 0xc6, 0xab, 0x44, 0xb4, 0x98, 0xef, 0x89, 0x3b, 0x0a, 0xf2, 0xba,
	0x1a, 0xc5, 0xd0, 0x2e, 0xdf, 0x33, 0x28, 0x9e, 0xa6, 0x01, 0xd5, 0xf7, 0x15, 0xbd, 0x44, 0xf2,
	0x01, 0x6f, 0x20, 0x67, 0x47, 0xb2, 0x0d, 0x2c, 0x8d, 0xd1, 0x45, 0x76, 0x9b, 0xdd, 0x5d, 0x28,
	0x18, 0xad, 0x8d, 0x46, 0x84, 0xf3, 0x60, 0x3a, 0x2a, 0x4e, 0x8f, 0x49, 0xa6, 0x7a, 0x8d, 0x0f,
	0x70, 0xd9, 0x72, 0xb4, 0xda, 0xd8, 0x7d, 0xd3, 0xf2, 0xa1, 0x38, 0x3b, 0x66, 0x79, 0x3d, 0xaf,
	0xbe, 0x3f, 0x5e, 0x7f, 0xa5, 0x6b, 0x3e, 0xd4, 0xcf, 0x2a, 0x6f, 0xa7, 0x67, 0xf9, 0x08, 0xd7,
	0x09, 0x18, 0xef, 0xd8, 0x7a, 0xfa, 0xa4, 0x11, 0xf2, 0x1c, 0x65, 0x47, 0x3f, 0x68, 0x46, 0x6b,
	0xa3, 0xeb, 0x37, 0xc0, 0x5f, 0xd3, 0x1e, 0x0d, 0xcc, 0x06, 0x89, 0xcb, 0x2a, 0x75, 0xb5, 0xbf,
	0xb6, 0x5f, 0x54, 0xff, 0xad, 0x0f, 0x7c, 0xe5, 0x49, 0x3b, 0xeb, 0x6f, 0x7a, 0xff, 0x11, 0x00,
	0x00, 0xff, 0xff, 0xf6, 0xba, 0x23, 0x58, 0xb2, 0x01, 0x00, 0x00,
}
