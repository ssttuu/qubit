// Code generated by protoc-gen-go. DO NOT EDIT.
// source: render_operators/render_operators.proto

/*
Package render_operators is a generated protocol buffer package.

It is generated from these files:
	render_operators/render_operators.proto

It has these top-level messages:
	RenderOperatorRequest
	RenderOperator
*/
package render_operators

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import geometry "github.com/stupschwartz/qubit/proto-gen/go/geometry"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RenderOperatorRequest struct {
	RenderKey string `protobuf:"bytes,1,opt,name=render_key,json=renderKey" json:"render_key,omitempty"`
}

func (m *RenderOperatorRequest) Reset()                    { *m = RenderOperatorRequest{} }
func (m *RenderOperatorRequest) String() string            { return proto.CompactTextString(m) }
func (*RenderOperatorRequest) ProtoMessage()               {}
func (*RenderOperatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RenderOperatorRequest) GetRenderKey() string {
	if m != nil {
		return m.RenderKey
	}
	return ""
}

type RenderOperator struct {
	Id           string                  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	SceneId      string                  `protobuf:"bytes,2,opt,name=scene_id,json=sceneId" json:"scene_id,omitempty"`
	SceneVersion int32                   `protobuf:"varint,3,opt,name=scene_version,json=sceneVersion" json:"scene_version,omitempty"`
	OperatorId   string                  `protobuf:"bytes,4,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
	Time         string                  `protobuf:"bytes,5,opt,name=time" json:"time,omitempty"`
	BoundingBox  *geometry.BoundingBox2D `protobuf:"bytes,6,opt,name=bounding_box,json=boundingBox" json:"bounding_box,omitempty"`
	InputIds     []byte                  `protobuf:"bytes,7,opt,name=input_ids,json=inputIds,proto3" json:"input_ids,omitempty"`
	Parameters   []byte                  `protobuf:"bytes,8,opt,name=parameters,proto3" json:"parameters,omitempty"`
}

func (m *RenderOperator) Reset()                    { *m = RenderOperator{} }
func (m *RenderOperator) String() string            { return proto.CompactTextString(m) }
func (*RenderOperator) ProtoMessage()               {}
func (*RenderOperator) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RenderOperator) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RenderOperator) GetSceneId() string {
	if m != nil {
		return m.SceneId
	}
	return ""
}

func (m *RenderOperator) GetSceneVersion() int32 {
	if m != nil {
		return m.SceneVersion
	}
	return 0
}

func (m *RenderOperator) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

func (m *RenderOperator) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *RenderOperator) GetBoundingBox() *geometry.BoundingBox2D {
	if m != nil {
		return m.BoundingBox
	}
	return nil
}

func (m *RenderOperator) GetInputIds() []byte {
	if m != nil {
		return m.InputIds
	}
	return nil
}

func (m *RenderOperator) GetParameters() []byte {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func init() {
	proto.RegisterType((*RenderOperatorRequest)(nil), "render_operators.RenderOperatorRequest")
	proto.RegisterType((*RenderOperator)(nil), "render_operators.RenderOperator")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RenderOperators service

type RenderOperatorsClient interface {
	GetRenderOperators(ctx context.Context, in *RenderOperatorRequest, opts ...grpc.CallOption) (*RenderOperator, error)
}

type renderOperatorsClient struct {
	cc *grpc.ClientConn
}

func NewRenderOperatorsClient(cc *grpc.ClientConn) RenderOperatorsClient {
	return &renderOperatorsClient{cc}
}

func (c *renderOperatorsClient) GetRenderOperators(ctx context.Context, in *RenderOperatorRequest, opts ...grpc.CallOption) (*RenderOperator, error) {
	out := new(RenderOperator)
	err := grpc.Invoke(ctx, "/render_operators.RenderOperators/GetRenderOperators", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RenderOperators service

type RenderOperatorsServer interface {
	GetRenderOperators(context.Context, *RenderOperatorRequest) (*RenderOperator, error)
}

func RegisterRenderOperatorsServer(s *grpc.Server, srv RenderOperatorsServer) {
	s.RegisterService(&_RenderOperators_serviceDesc, srv)
}

func _RenderOperators_GetRenderOperators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenderOperatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RenderOperatorsServer).GetRenderOperators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/render_operators.RenderOperators/GetRenderOperators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RenderOperatorsServer).GetRenderOperators(ctx, req.(*RenderOperatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RenderOperators_serviceDesc = grpc.ServiceDesc{
	ServiceName: "render_operators.RenderOperators",
	HandlerType: (*RenderOperatorsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRenderOperators",
			Handler:    _RenderOperators_GetRenderOperators_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "render_operators/render_operators.proto",
}

func init() { proto.RegisterFile("render_operators/render_operators.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x91, 0x4d, 0x4f, 0x02, 0x41,
	0x0c, 0x86, 0x05, 0xf9, 0x2c, 0x88, 0xa6, 0x89, 0x61, 0xc5, 0x2f, 0x82, 0x07, 0x3c, 0xb1, 0x09,
	0x26, 0x1e, 0x3c, 0x12, 0x13, 0x43, 0x3c, 0x98, 0xec, 0xc1, 0x2b, 0x99, 0x75, 0x9b, 0xcd, 0x44,
	0x99, 0xae, 0x33, 0x83, 0x81, 0x3f, 0xe1, 0x6f, 0x76, 0x9c, 0x5d, 0x54, 0xd0, 0xc4, 0x5b, 0xe7,
	0x79, 0xdb, 0xb7, 0xed, 0x14, 0x86, 0x9a, 0x54, 0x42, 0x7a, 0xc6, 0x19, 0x69, 0x61, 0x59, 0x9b,
	0x70, 0x1b, 0x8c, 0x32, 0xcd, 0x96, 0xf1, 0x60, 0x9b, 0xf7, 0x4e, 0x52, 0xe6, 0xf4, 0x85, 0x42,
	0x91, 0xc9, 0x50, 0x28, 0xc5, 0x56, 0x58, 0xc9, 0xaa, 0xc8, 0xef, 0x75, 0x53, 0xe2, 0x39, 0x59,
	0xbd, 0x0a, 0xd7, 0x41, 0x2e, 0x0c, 0xae, 0xe1, 0x30, 0xf2, 0x56, 0x0f, 0x85, 0x53, 0x44, 0xaf,
	0x0b, 0x32, 0x16, 0x4f, 0x01, 0x8a, 0x1e, 0xcf, 0xb4, 0x0a, 0x4a, 0xfd, 0xd2, 0x65, 0x33, 0x6a,
	0xe6, 0xe4, 0x9e, 0x56, 0x83, 0xf7, 0x32, 0x74, 0x36, 0x0b, 0xb1, 0x03, 0x65, 0x99, 0x14, 0x99,
	0x2e, 0xc2, 0x23, 0x68, 0x98, 0x27, 0x52, 0x34, 0x73, 0xb4, 0xec, 0x69, 0xdd, 0xbf, 0xa7, 0x09,
	0x5e, 0xc0, 0x5e, 0x2e, 0xbd, 0x91, 0x36, 0x6e, 0xcc, 0x60, 0xd7, 0xe9, 0xd5, 0xa8, 0xed, 0xe1,
	0x63, 0xce, 0xf0, 0x1c, 0x5a, 0xeb, 0xf5, 0x3e, 0x2d, 0x2a, 0xde, 0x02, 0xd6, 0xc8, 0xb9, 0x20,
	0x54, 0xac, 0x9c, 0x53, 0x50, 0xf5, 0x8a, 0x8f, 0xf1, 0x06, 0xda, 0x31, 0x2f, 0x54, 0x22, 0x55,
	0x3a, 0x8b, 0x79, 0x19, 0xd4, 0x9c, 0xd6, 0x1a, 0x77, 0x47, 0x5f, 0x6b, 0x4f, 0x0a, 0x75, 0xc2,
	0xcb, 0xf1, 0x6d, 0xd4, 0x8a, 0xbf, 0x9f, 0x78, 0x0c, 0x4d, 0xa9, 0xb2, 0x85, 0x75, 0xdd, 0x4c,
	0x50, 0x77, 0x85, 0xed, 0xa8, 0xe1, 0xc1, 0x34, 0x31, 0x78, 0x06, 0x90, 0x09, 0x2d, 0x9c, 0x89,
	0x1b, 0x2f, 0x68, 0x78, 0xf5, 0x07, 0x19, 0x5b, 0xd8, 0xdf, 0xfc, 0x0f, 0x83, 0x02, 0xf0, 0x8e,
	0xec, 0x36, 0x1d, 0x8e, 0x7e, 0xdd, 0xf4, 0xcf, 0x0b, 0xf4, 0xfa, 0xff, 0x25, 0x0e, 0x76, 0xe2,
	0x9a, 0xbf, 0xe2, 0xd5, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0f, 0xee, 0x16, 0x31, 0x39, 0x02,
	0x00, 0x00,
}
