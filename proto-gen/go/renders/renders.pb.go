// Code generated by protoc-gen-go. DO NOT EDIT.
// source: renders/renders.proto

/*
Package renders is a generated protocol buffer package.

It is generated from these files:
	renders/renders.proto

It has these top-level messages:
	RenderRequest
	RenderResponse
*/
package renders

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import geometry "github.com/stupschwartz/qubit/proto-gen/go/geometry"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RenderRequest struct {
	OperatorId  string                  `protobuf:"bytes,1,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
	ParameterId string                  `protobuf:"bytes,2,opt,name=parameter_id,json=parameterId" json:"parameter_id,omitempty"`
	Time        int32                   `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`
	BoundingBox *geometry.BoundingBox2D `protobuf:"bytes,4,opt,name=bounding_box,json=boundingBox" json:"bounding_box,omitempty"`
}

func (m *RenderRequest) Reset()                    { *m = RenderRequest{} }
func (m *RenderRequest) String() string            { return proto.CompactTextString(m) }
func (*RenderRequest) ProtoMessage()               {}
func (*RenderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RenderRequest) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

func (m *RenderRequest) GetParameterId() string {
	if m != nil {
		return m.ParameterId
	}
	return ""
}

func (m *RenderRequest) GetTime() int32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *RenderRequest) GetBoundingBox() *geometry.BoundingBox2D {
	if m != nil {
		return m.BoundingBox
	}
	return nil
}

type RenderResponse struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *RenderResponse) Reset()                    { *m = RenderResponse{} }
func (m *RenderResponse) String() string            { return proto.CompactTextString(m) }
func (*RenderResponse) ProtoMessage()               {}
func (*RenderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RenderResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*RenderRequest)(nil), "renders.RenderRequest")
	proto.RegisterType((*RenderResponse)(nil), "renders.RenderResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Renders service

type RendersClient interface {
	DoRender(ctx context.Context, in *RenderRequest, opts ...grpc.CallOption) (*RenderResponse, error)
}

type rendersClient struct {
	cc *grpc.ClientConn
}

func NewRendersClient(cc *grpc.ClientConn) RendersClient {
	return &rendersClient{cc}
}

func (c *rendersClient) DoRender(ctx context.Context, in *RenderRequest, opts ...grpc.CallOption) (*RenderResponse, error) {
	out := new(RenderResponse)
	err := grpc.Invoke(ctx, "/renders.Renders/DoRender", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Renders service

type RendersServer interface {
	DoRender(context.Context, *RenderRequest) (*RenderResponse, error)
}

func RegisterRendersServer(s *grpc.Server, srv RendersServer) {
	s.RegisterService(&_Renders_serviceDesc, srv)
}

func _Renders_DoRender_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RendersServer).DoRender(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/renders.Renders/DoRender",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RendersServer).DoRender(ctx, req.(*RenderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Renders_serviceDesc = grpc.ServiceDesc{
	ServiceName: "renders.Renders",
	HandlerType: (*RendersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoRender",
			Handler:    _Renders_DoRender_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "renders/renders.proto",
}

func init() { proto.RegisterFile("renders/renders.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x09, 0x14, 0x0a, 0x97, 0xc0, 0x60, 0x09, 0x12, 0x75, 0x01, 0x22, 0x06, 0xa6, 0x54,
	0x0a, 0x1b, 0x12, 0x4b, 0xd5, 0x01, 0x56, 0xff, 0x81, 0xca, 0x96, 0x4f, 0x55, 0x86, 0xfa, 0x8c,
	0xed, 0x4a, 0xe5, 0xf7, 0xf0, 0x47, 0x31, 0x76, 0x1c, 0x84, 0x3a, 0xe5, 0xde, 0x7b, 0x9f, 0x2e,
	0xcf, 0x07, 0xb7, 0x16, 0xb5, 0x42, 0xeb, 0x96, 0xe3, 0xb7, 0x33, 0x96, 0x3c, 0xb1, 0xf9, 0x28,
	0x17, 0xf5, 0x16, 0x69, 0x87, 0xde, 0x7e, 0x2d, 0xf3, 0x90, 0x88, 0xf6, 0xbb, 0x80, 0x6b, 0x1e,
	0x21, 0x8e, 0x9f, 0x7b, 0x74, 0x9e, 0xdd, 0x43, 0x49, 0x06, 0xad, 0xf0, 0x64, 0x37, 0x83, 0x6a,
	0x8a, 0x87, 0xe2, 0xf9, 0x8a, 0x43, 0xb6, 0x3e, 0x14, 0x7b, 0x84, 0xca, 0x08, 0x2b, 0xc2, 0x16,
	0x8c, 0xc4, 0x69, 0x24, 0xca, 0xc9, 0x0b, 0x08, 0x83, 0x99, 0x1f, 0x76, 0xd8, 0x9c, 0x85, 0xe8,
	0x9c, 0xc7, 0x99, 0xbd, 0x42, 0x25, 0x69, 0xaf, 0xd5, 0xa0, 0xb7, 0x1b, 0x49, 0x87, 0x66, 0x16,
	0xb2, 0xb2, 0xaf, 0xbb, 0xa9, 0xd0, 0x6a, 0x4c, 0x57, 0x74, 0xe8, 0xd7, 0xbc, 0x94, 0x7f, 0xb2,
	0x7d, 0x82, 0x9b, 0x5c, 0xd2, 0x19, 0xd2, 0x0e, 0x7f, 0xff, 0xa0, 0x84, 0x17, 0xb1, 0x5e, 0xc5,
	0xe3, 0xdc, 0xbf, 0xc3, 0x3c, 0x51, 0x8e, 0xbd, 0xc1, 0xe5, 0x9a, 0x92, 0x60, 0x77, 0x5d, 0x3e,
	0xca, 0xbf, 0x87, 0x2e, 0xea, 0x23, 0x3f, 0xed, 0x6e, 0x4f, 0xe4, 0x45, 0x3c, 0xce, 0xcb, 0x4f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x66, 0x65, 0x9e, 0x04, 0x57, 0x01, 0x00, 0x00,
}
