// Code generated by protoc-gen-go. DO NOT EDIT.
// source: operators/operators.proto

/*
Package operators is a generated protocol buffer package.

It is generated from these files:
	operators/operators.proto

It has these top-level messages:
	Component
	Parameter
	Operator
	ListOperatorsRequest
	ListOperatorsResponse
	GetOperatorRequest
	CreateOperatorRequest
	UpdateOperatorRequest
	DeleteOperatorRequest
	RenderOperatorRequest
	RenderOperatorResponse
*/
package operators

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
import geometry "github.com/stupschwartz/qubit/proto-gen/go/geometry"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Component struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// TODO: use oneof
	Value float64 `protobuf:"fixed64,2,opt,name=value" json:"value,omitempty"`
}

func (m *Component) Reset()                    { *m = Component{} }
func (m *Component) String() string            { return proto.CompactTextString(m) }
func (*Component) ProtoMessage()               {}
func (*Component) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Component) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Component) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Parameter struct {
	Name       string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Labels     map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Components []*Component      `protobuf:"bytes,3,rep,name=components" json:"components,omitempty"`
}

func (m *Parameter) Reset()                    { *m = Parameter{} }
func (m *Parameter) String() string            { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()               {}
func (*Parameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Parameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Parameter) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Parameter) GetComponents() []*Component {
	if m != nil {
		return m.Components
	}
	return nil
}

type Operator struct {
	Id         string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	SceneId    string       `protobuf:"bytes,2,opt,name=scene_id,json=sceneId" json:"scene_id,omitempty"`
	Type       string       `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Name       string       `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Context    string       `protobuf:"bytes,5,opt,name=context" json:"context,omitempty"`
	Inputs     []string     `protobuf:"bytes,6,rep,name=inputs" json:"inputs,omitempty"`
	Parameters []*Parameter `protobuf:"bytes,7,rep,name=parameters" json:"parameters,omitempty"`
}

func (m *Operator) Reset()                    { *m = Operator{} }
func (m *Operator) String() string            { return proto.CompactTextString(m) }
func (*Operator) ProtoMessage()               {}
func (*Operator) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Operator) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Operator) GetSceneId() string {
	if m != nil {
		return m.SceneId
	}
	return ""
}

func (m *Operator) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Operator) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Operator) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *Operator) GetInputs() []string {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Operator) GetParameters() []*Parameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type ListOperatorsRequest struct {
	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListOperatorsRequest) Reset()                    { *m = ListOperatorsRequest{} }
func (m *ListOperatorsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListOperatorsRequest) ProtoMessage()               {}
func (*ListOperatorsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListOperatorsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListOperatorsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListOperatorsResponse struct {
	Operators     []*Operator `protobuf:"bytes,1,rep,name=operators" json:"operators,omitempty"`
	NextPageToken string      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListOperatorsResponse) Reset()                    { *m = ListOperatorsResponse{} }
func (m *ListOperatorsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListOperatorsResponse) ProtoMessage()               {}
func (*ListOperatorsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListOperatorsResponse) GetOperators() []*Operator {
	if m != nil {
		return m.Operators
	}
	return nil
}

func (m *ListOperatorsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetOperatorRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetOperatorRequest) Reset()                    { *m = GetOperatorRequest{} }
func (m *GetOperatorRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOperatorRequest) ProtoMessage()               {}
func (*GetOperatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetOperatorRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CreateOperatorRequest struct {
	Operator *Operator `protobuf:"bytes,1,opt,name=operator" json:"operator,omitempty"`
}

func (m *CreateOperatorRequest) Reset()                    { *m = CreateOperatorRequest{} }
func (m *CreateOperatorRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateOperatorRequest) ProtoMessage()               {}
func (*CreateOperatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreateOperatorRequest) GetOperator() *Operator {
	if m != nil {
		return m.Operator
	}
	return nil
}

type UpdateOperatorRequest struct {
	Id       string    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Operator *Operator `protobuf:"bytes,2,opt,name=operator" json:"operator,omitempty"`
}

func (m *UpdateOperatorRequest) Reset()                    { *m = UpdateOperatorRequest{} }
func (m *UpdateOperatorRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateOperatorRequest) ProtoMessage()               {}
func (*UpdateOperatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateOperatorRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateOperatorRequest) GetOperator() *Operator {
	if m != nil {
		return m.Operator
	}
	return nil
}

type DeleteOperatorRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteOperatorRequest) Reset()                    { *m = DeleteOperatorRequest{} }
func (m *DeleteOperatorRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteOperatorRequest) ProtoMessage()               {}
func (*DeleteOperatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeleteOperatorRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RenderOperatorRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// TODO: use double?
	Frame       int32                   `protobuf:"varint,2,opt,name=frame" json:"frame,omitempty"`
	BoundingBox *geometry.BoundingBox2D `protobuf:"bytes,3,opt,name=bounding_box,json=boundingBox" json:"bounding_box,omitempty"`
}

func (m *RenderOperatorRequest) Reset()                    { *m = RenderOperatorRequest{} }
func (m *RenderOperatorRequest) String() string            { return proto.CompactTextString(m) }
func (*RenderOperatorRequest) ProtoMessage()               {}
func (*RenderOperatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RenderOperatorRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RenderOperatorRequest) GetFrame() int32 {
	if m != nil {
		return m.Frame
	}
	return 0
}

func (m *RenderOperatorRequest) GetBoundingBox() *geometry.BoundingBox2D {
	if m != nil {
		return m.BoundingBox
	}
	return nil
}

type RenderOperatorResponse struct {
	ResultUrl  string `protobuf:"bytes,1,opt,name=result_url,json=resultUrl" json:"result_url,omitempty"`
	ResultType string `protobuf:"bytes,2,opt,name=result_type,json=resultType" json:"result_type,omitempty"`
}

func (m *RenderOperatorResponse) Reset()                    { *m = RenderOperatorResponse{} }
func (m *RenderOperatorResponse) String() string            { return proto.CompactTextString(m) }
func (*RenderOperatorResponse) ProtoMessage()               {}
func (*RenderOperatorResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *RenderOperatorResponse) GetResultUrl() string {
	if m != nil {
		return m.ResultUrl
	}
	return ""
}

func (m *RenderOperatorResponse) GetResultType() string {
	if m != nil {
		return m.ResultType
	}
	return ""
}

func init() {
	proto.RegisterType((*Component)(nil), "operators.Component")
	proto.RegisterType((*Parameter)(nil), "operators.Parameter")
	proto.RegisterType((*Operator)(nil), "operators.Operator")
	proto.RegisterType((*ListOperatorsRequest)(nil), "operators.ListOperatorsRequest")
	proto.RegisterType((*ListOperatorsResponse)(nil), "operators.ListOperatorsResponse")
	proto.RegisterType((*GetOperatorRequest)(nil), "operators.GetOperatorRequest")
	proto.RegisterType((*CreateOperatorRequest)(nil), "operators.CreateOperatorRequest")
	proto.RegisterType((*UpdateOperatorRequest)(nil), "operators.UpdateOperatorRequest")
	proto.RegisterType((*DeleteOperatorRequest)(nil), "operators.DeleteOperatorRequest")
	proto.RegisterType((*RenderOperatorRequest)(nil), "operators.RenderOperatorRequest")
	proto.RegisterType((*RenderOperatorResponse)(nil), "operators.RenderOperatorResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Operators service

type OperatorsClient interface {
	List(ctx context.Context, in *ListOperatorsRequest, opts ...grpc.CallOption) (*ListOperatorsResponse, error)
	Get(ctx context.Context, in *GetOperatorRequest, opts ...grpc.CallOption) (*Operator, error)
	Create(ctx context.Context, in *CreateOperatorRequest, opts ...grpc.CallOption) (*Operator, error)
	Update(ctx context.Context, in *UpdateOperatorRequest, opts ...grpc.CallOption) (*Operator, error)
	Delete(ctx context.Context, in *DeleteOperatorRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	Render(ctx context.Context, in *RenderOperatorRequest, opts ...grpc.CallOption) (*RenderOperatorResponse, error)
}

type operatorsClient struct {
	cc *grpc.ClientConn
}

func NewOperatorsClient(cc *grpc.ClientConn) OperatorsClient {
	return &operatorsClient{cc}
}

func (c *operatorsClient) List(ctx context.Context, in *ListOperatorsRequest, opts ...grpc.CallOption) (*ListOperatorsResponse, error) {
	out := new(ListOperatorsResponse)
	err := grpc.Invoke(ctx, "/operators.Operators/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorsClient) Get(ctx context.Context, in *GetOperatorRequest, opts ...grpc.CallOption) (*Operator, error) {
	out := new(Operator)
	err := grpc.Invoke(ctx, "/operators.Operators/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorsClient) Create(ctx context.Context, in *CreateOperatorRequest, opts ...grpc.CallOption) (*Operator, error) {
	out := new(Operator)
	err := grpc.Invoke(ctx, "/operators.Operators/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorsClient) Update(ctx context.Context, in *UpdateOperatorRequest, opts ...grpc.CallOption) (*Operator, error) {
	out := new(Operator)
	err := grpc.Invoke(ctx, "/operators.Operators/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorsClient) Delete(ctx context.Context, in *DeleteOperatorRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/operators.Operators/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorsClient) Render(ctx context.Context, in *RenderOperatorRequest, opts ...grpc.CallOption) (*RenderOperatorResponse, error) {
	out := new(RenderOperatorResponse)
	err := grpc.Invoke(ctx, "/operators.Operators/Render", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Operators service

type OperatorsServer interface {
	List(context.Context, *ListOperatorsRequest) (*ListOperatorsResponse, error)
	Get(context.Context, *GetOperatorRequest) (*Operator, error)
	Create(context.Context, *CreateOperatorRequest) (*Operator, error)
	Update(context.Context, *UpdateOperatorRequest) (*Operator, error)
	Delete(context.Context, *DeleteOperatorRequest) (*google_protobuf1.Empty, error)
	Render(context.Context, *RenderOperatorRequest) (*RenderOperatorResponse, error)
}

func RegisterOperatorsServer(s *grpc.Server, srv OperatorsServer) {
	s.RegisterService(&_Operators_serviceDesc, srv)
}

func _Operators_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOperatorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/operators.Operators/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorsServer).List(ctx, req.(*ListOperatorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Operators_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOperatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/operators.Operators/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorsServer).Get(ctx, req.(*GetOperatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Operators_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOperatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/operators.Operators/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorsServer).Create(ctx, req.(*CreateOperatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Operators_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOperatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/operators.Operators/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorsServer).Update(ctx, req.(*UpdateOperatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Operators_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOperatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/operators.Operators/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorsServer).Delete(ctx, req.(*DeleteOperatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Operators_Render_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenderOperatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorsServer).Render(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/operators.Operators/Render",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorsServer).Render(ctx, req.(*RenderOperatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Operators_serviceDesc = grpc.ServiceDesc{
	ServiceName: "operators.Operators",
	HandlerType: (*OperatorsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Operators_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Operators_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Operators_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Operators_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Operators_Delete_Handler,
		},
		{
			MethodName: "Render",
			Handler:    _Operators_Render_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "operators/operators.proto",
}

func init() { proto.RegisterFile("operators/operators.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 749 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x55, 0xcd, 0x6e, 0xd3, 0x4a,
	0x14, 0x56, 0xfe, 0xdc, 0xf8, 0xe4, 0xf6, 0xf6, 0x6a, 0x6e, 0xd2, 0x26, 0xee, 0xed, 0x6d, 0x6b,
	0x55, 0x50, 0xb1, 0x88, 0xd5, 0x00, 0x52, 0xe9, 0xb2, 0x3f, 0x02, 0xa4, 0x4a, 0x54, 0xa6, 0x95,
	0x58, 0x11, 0x9c, 0xe6, 0x34, 0xb2, 0xea, 0xcc, 0x18, 0x7b, 0x5c, 0x35, 0x20, 0x36, 0xbc, 0x02,
	0xcf, 0xc4, 0x86, 0x2d, 0x0f, 0xc0, 0x86, 0x07, 0x61, 0x3c, 0x1e, 0x3b, 0x4e, 0xe2, 0x52, 0x76,
	0x73, 0xce, 0x9c, 0xf3, 0x7d, 0xdf, 0x39, 0xf3, 0x25, 0x86, 0x0e, 0xf3, 0x31, 0x70, 0x38, 0x0b,
	0x42, 0x2b, 0x3b, 0x75, 0xfd, 0x80, 0x71, 0x46, 0xf4, 0x2c, 0x61, 0xfc, 0x37, 0x62, 0x6c, 0xe4,
	0xa1, 0xe5, 0xf8, 0xae, 0xe5, 0x50, 0xca, 0xb8, 0xc3, 0x5d, 0x46, 0x55, 0xa1, 0xb1, 0xae, 0x6e,
	0x65, 0x34, 0x88, 0xae, 0x2c, 0x1c, 0xfb, 0x7c, 0xa2, 0x2e, 0xd7, 0x46, 0xc8, 0xc6, 0xc8, 0x83,
	0x89, 0x95, 0x1e, 0x92, 0x0b, 0xf3, 0x29, 0xe8, 0x47, 0x6c, 0xec, 0x33, 0x8a, 0x94, 0x13, 0x02,
	0x55, 0xea, 0x8c, 0xb1, 0x5d, 0xda, 0x2a, 0xed, 0xea, 0xb6, 0x3c, 0x93, 0x26, 0xd4, 0x6e, 0x1c,
	0x2f, 0xc2, 0x76, 0x59, 0x24, 0x4b, 0x76, 0x12, 0x98, 0xdf, 0x4a, 0xa0, 0x9f, 0x39, 0x81, 0x28,
	0xe0, 0x18, 0x14, 0xf6, 0xed, 0x83, 0xe6, 0x39, 0x03, 0xf4, 0x42, 0xd1, 0x58, 0xd9, 0x6d, 0xf4,
	0xb6, 0xba, 0xd3, 0xc9, 0xb2, 0xce, 0xee, 0xa9, 0x2c, 0x39, 0xa1, 0x42, 0x90, 0xad, 0xea, 0xc9,
	0x13, 0x80, 0xcb, 0x54, 0x52, 0xd8, 0xae, 0xc8, 0xee, 0x66, 0xae, 0x3b, 0xd3, 0x6b, 0xe7, 0xea,
	0x8c, 0x67, 0xd0, 0xc8, 0x81, 0x91, 0x7f, 0xa0, 0x72, 0x8d, 0x13, 0xa5, 0x28, 0x3e, 0xce, 0x0e,
	0xa2, 0xab, 0x41, 0x0e, 0xca, 0xfb, 0x25, 0xf3, 0x6b, 0x09, 0xea, 0xaf, 0x14, 0x3c, 0xf9, 0x1b,
	0xca, 0xee, 0x50, 0xf5, 0x89, 0x13, 0xe9, 0x40, 0x3d, 0xbc, 0x44, 0x8a, 0x7d, 0x91, 0x4d, 0x3a,
	0x97, 0x64, 0xfc, 0x72, 0x18, 0x8f, 0xcd, 0x27, 0x3e, 0x0a, 0x89, 0x72, 0xec, 0xf8, 0x9c, 0xad,
	0xa2, 0x9a, 0x5b, 0x45, 0x1b, 0x96, 0x2e, 0x19, 0xe5, 0x78, 0xcb, 0xdb, 0xb5, 0x04, 0x41, 0x85,
	0x64, 0x15, 0x34, 0x97, 0xfa, 0x91, 0x18, 0x53, 0x13, 0x63, 0xea, 0xb6, 0x8a, 0xe2, 0x15, 0xf8,
	0xe9, 0x8e, 0xc2, 0xf6, 0xd2, 0xc2, 0x0a, 0xb2, 0x05, 0xda, 0xb9, 0x3a, 0xd3, 0x86, 0xe6, 0xa9,
	0x1b, 0xf2, 0x74, 0x94, 0xd0, 0xc6, 0xf7, 0x11, 0x86, 0x9c, 0xac, 0x83, 0xee, 0x3b, 0x23, 0xec,
	0x87, 0xee, 0x87, 0xe4, 0x8d, 0x6a, 0x76, 0x3d, 0x4e, 0xbc, 0x16, 0x31, 0xd9, 0x88, 0xa9, 0xc4,
	0x25, 0x67, 0xd7, 0x48, 0xd5, 0x84, 0xb2, 0xfc, 0x3c, 0x4e, 0x98, 0x01, 0xb4, 0xe6, 0x30, 0x43,
	0xb1, 0xf1, 0x10, 0xc9, 0x1e, 0x4c, 0x9d, 0x29, 0x40, 0x63, 0x85, 0xff, 0xe6, 0x14, 0xa6, 0x0d,
	0xf6, 0xb4, 0x8a, 0x3c, 0x80, 0x15, 0x2a, 0xa6, 0xee, 0x2f, 0xf0, 0x2d, 0xc7, 0xe9, 0xb3, 0x8c,
	0x73, 0x07, 0xc8, 0x73, 0xcc, 0x28, 0xd3, 0x29, 0xe6, 0x1e, 0xc6, 0x7c, 0x01, 0xad, 0xa3, 0x00,
	0x1d, 0x8e, 0xf3, 0x85, 0x16, 0xd4, 0x53, 0x4e, 0x59, 0x7e, 0x87, 0xb0, 0xac, 0xc8, 0x7c, 0x03,
	0xad, 0x0b, 0x7f, 0x58, 0x80, 0x34, 0xef, 0x85, 0x3c, 0x72, 0xf9, 0x4f, 0x90, 0x1f, 0x42, 0xeb,
	0x18, 0x3d, 0xbc, 0x17, 0xd9, 0x9c, 0x40, 0xcb, 0x46, 0x3a, 0xc4, 0xe0, 0x3e, 0x09, 0xc2, 0xc5,
	0x57, 0xf1, 0x83, 0x4b, 0xfe, 0x9a, 0x9d, 0x04, 0xe4, 0x00, 0xfe, 0x1a, 0xb0, 0x88, 0x0e, 0x5d,
	0x3a, 0xea, 0x0f, 0xd8, 0xad, 0x74, 0x64, 0xa3, 0xb7, 0xd6, 0xcd, 0x7e, 0xec, 0x87, 0xea, 0xf6,
	0x90, 0xdd, 0xf6, 0x8e, 0xed, 0xc6, 0x60, 0x1a, 0x8a, 0xe9, 0x57, 0xe7, 0xa9, 0xd5, 0x13, 0x0b,
	0x6b, 0x04, 0x18, 0x46, 0x1e, 0xef, 0x47, 0x81, 0xa7, 0x34, 0xe8, 0x49, 0xe6, 0x22, 0xf0, 0xc8,
	0x26, 0x34, 0xd4, 0xb5, 0xfc, 0x15, 0x24, 0x4f, 0xa9, 0x3a, 0xce, 0x45, 0xa6, 0xf7, 0xa3, 0x0a,
	0x7a, 0x66, 0x1c, 0xf2, 0x0e, 0xaa, 0xb1, 0x93, 0xc8, 0x66, 0x6e, 0x65, 0x45, 0x76, 0x35, 0xb6,
	0xee, 0x2e, 0x48, 0x84, 0x99, 0xad, 0xcf, 0xdf, 0x7f, 0x7e, 0x29, 0xaf, 0x90, 0x65, 0xeb, 0x66,
	0x6f, 0xfa, 0x87, 0x49, 0x2e, 0xa0, 0x22, 0x7c, 0x43, 0x36, 0x72, 0xfd, 0x8b, 0x3e, 0x32, 0x8a,
	0x9e, 0xcc, 0x34, 0x24, 0x62, 0x93, 0x90, 0x19, 0x44, 0xeb, 0xa3, 0x3b, 0xfc, 0x24, 0x84, 0x6b,
	0x89, 0xd1, 0x48, 0x5e, 0x59, 0xa1, 0xf7, 0x8a, 0xc1, 0x37, 0x25, 0x78, 0xc7, 0x9c, 0x95, 0x7b,
	0x90, 0xd9, 0x84, 0x20, 0x68, 0x89, 0x01, 0x67, 0x18, 0x0a, 0x3d, 0x59, 0xcc, 0xb0, 0x23, 0x19,
	0xfe, 0x37, 0x0a, 0xe4, 0xe7, 0x68, 0xde, 0x82, 0x96, 0xb8, 0x71, 0x86, 0xa6, 0xd0, 0xa0, 0xc6,
	0x6a, 0x37, 0xf9, 0x9c, 0x74, 0xd3, 0xcf, 0x49, 0xf7, 0x24, 0xfe, 0x9c, 0xa4, 0x8b, 0x7a, 0x54,
	0xb4, 0x28, 0x1f, 0xb4, 0xc4, 0x49, 0x33, 0xf8, 0x85, 0xbe, 0x36, 0xb6, 0x7f, 0x53, 0xa1, 0x5e,
	0x79, 0x5b, 0x52, 0xad, 0x9b, 0x9d, 0x45, 0x2a, 0x2b, 0x90, 0x2d, 0x03, 0x4d, 0xaa, 0x7b, 0xfc,
	0x2b, 0x00, 0x00, 0xff, 0xff, 0x87, 0x4e, 0x8b, 0xbc, 0x40, 0x07, 0x00, 0x00,
}
