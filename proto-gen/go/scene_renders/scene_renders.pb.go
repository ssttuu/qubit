// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scene_renders/scene_renders.proto

/*
Package scene_renders is a generated protocol buffer package.

It is generated from these files:
	scene_renders/scene_renders.proto

It has these top-level messages:
	SceneRender
	SceneRenderStatus
	SceneRenderRequest
	SceneRenderStatusRequest
*/
package scene_renders

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import geometry "github.com/stupschwartz/qubit/proto-gen/go/geometry"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SceneRender struct {
	SceneId     string                  `protobuf:"bytes,1,opt,name=scene_id,json=sceneId" json:"scene_id,omitempty"`
	OperatorId  string                  `protobuf:"bytes,2,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
	Time        string                  `protobuf:"bytes,3,opt,name=time" json:"time,omitempty"`
	BoundingBox *geometry.BoundingBox2D `protobuf:"bytes,4,opt,name=bounding_box,json=boundingBox" json:"bounding_box,omitempty"`
}

func (m *SceneRender) Reset()                    { *m = SceneRender{} }
func (m *SceneRender) String() string            { return proto.CompactTextString(m) }
func (*SceneRender) ProtoMessage()               {}
func (*SceneRender) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SceneRender) GetSceneId() string {
	if m != nil {
		return m.SceneId
	}
	return ""
}

func (m *SceneRender) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

func (m *SceneRender) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *SceneRender) GetBoundingBox() *geometry.BoundingBox2D {
	if m != nil {
		return m.BoundingBox
	}
	return nil
}

type SceneRenderStatus struct {
	Id         string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Status     int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	CreatedAt  int64  `protobuf:"varint,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	ResourceId string `protobuf:"bytes,4,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
}

func (m *SceneRenderStatus) Reset()                    { *m = SceneRenderStatus{} }
func (m *SceneRenderStatus) String() string            { return proto.CompactTextString(m) }
func (*SceneRenderStatus) ProtoMessage()               {}
func (*SceneRenderStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SceneRenderStatus) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SceneRenderStatus) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SceneRenderStatus) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *SceneRenderStatus) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

type SceneRenderRequest struct {
	Render *SceneRender `protobuf:"bytes,1,opt,name=render" json:"render,omitempty"`
}

func (m *SceneRenderRequest) Reset()                    { *m = SceneRenderRequest{} }
func (m *SceneRenderRequest) String() string            { return proto.CompactTextString(m) }
func (*SceneRenderRequest) ProtoMessage()               {}
func (*SceneRenderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SceneRenderRequest) GetRender() *SceneRender {
	if m != nil {
		return m.Render
	}
	return nil
}

type SceneRenderStatusRequest struct {
	Status *SceneRenderStatus `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *SceneRenderStatusRequest) Reset()                    { *m = SceneRenderStatusRequest{} }
func (m *SceneRenderStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*SceneRenderStatusRequest) ProtoMessage()               {}
func (*SceneRenderStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SceneRenderStatusRequest) GetStatus() *SceneRenderStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*SceneRender)(nil), "scene_renders.SceneRender")
	proto.RegisterType((*SceneRenderStatus)(nil), "scene_renders.SceneRenderStatus")
	proto.RegisterType((*SceneRenderRequest)(nil), "scene_renders.SceneRenderRequest")
	proto.RegisterType((*SceneRenderStatusRequest)(nil), "scene_renders.SceneRenderStatusRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SceneRenders service

type SceneRendersClient interface {
	Create(ctx context.Context, in *SceneRenderRequest, opts ...grpc.CallOption) (*SceneRenderStatus, error)
	Get(ctx context.Context, in *SceneRenderStatusRequest, opts ...grpc.CallOption) (*SceneRenderStatus, error)
}

type sceneRendersClient struct {
	cc *grpc.ClientConn
}

func NewSceneRendersClient(cc *grpc.ClientConn) SceneRendersClient {
	return &sceneRendersClient{cc}
}

func (c *sceneRendersClient) Create(ctx context.Context, in *SceneRenderRequest, opts ...grpc.CallOption) (*SceneRenderStatus, error) {
	out := new(SceneRenderStatus)
	err := grpc.Invoke(ctx, "/scene_renders.SceneRenders/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sceneRendersClient) Get(ctx context.Context, in *SceneRenderStatusRequest, opts ...grpc.CallOption) (*SceneRenderStatus, error) {
	out := new(SceneRenderStatus)
	err := grpc.Invoke(ctx, "/scene_renders.SceneRenders/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SceneRenders service

type SceneRendersServer interface {
	Create(context.Context, *SceneRenderRequest) (*SceneRenderStatus, error)
	Get(context.Context, *SceneRenderStatusRequest) (*SceneRenderStatus, error)
}

func RegisterSceneRendersServer(s *grpc.Server, srv SceneRendersServer) {
	s.RegisterService(&_SceneRenders_serviceDesc, srv)
}

func _SceneRenders_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SceneRenderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SceneRendersServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scene_renders.SceneRenders/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SceneRendersServer).Create(ctx, req.(*SceneRenderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SceneRenders_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SceneRenderStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SceneRendersServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scene_renders.SceneRenders/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SceneRendersServer).Get(ctx, req.(*SceneRenderStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SceneRenders_serviceDesc = grpc.ServiceDesc{
	ServiceName: "scene_renders.SceneRenders",
	HandlerType: (*SceneRendersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _SceneRenders_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _SceneRenders_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "scene_renders/scene_renders.proto",
}

func init() { proto.RegisterFile("scene_renders/scene_renders.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x52, 0xcd, 0x4e, 0xe2, 0x50,
	0x14, 0x4e, 0x81, 0xe9, 0x0c, 0xa7, 0xcc, 0x64, 0xe6, 0x24, 0x33, 0x74, 0xaa, 0x46, 0xe8, 0x46,
	0x57, 0x34, 0xd6, 0x8d, 0x61, 0x27, 0x9a, 0x28, 0xdb, 0xe2, 0x9e, 0xb4, 0xf4, 0xa4, 0xa9, 0x91,
	0x5e, 0xbc, 0xbd, 0x35, 0x18, 0xe2, 0xc6, 0x57, 0x70, 0xe5, 0x73, 0xf9, 0x0a, 0xc6, 0xe7, 0xb0,
	0xdc, 0xde, 0x62, 0x89, 0x51, 0xdc, 0x9d, 0x73, 0xbe, 0xef, 0x7e, 0x3f, 0x50, 0xe8, 0xa6, 0x13,
	0x4a, 0x68, 0xcc, 0x29, 0x09, 0x89, 0xa7, 0xce, 0xda, 0xd6, 0x9b, 0x71, 0x26, 0x18, 0xfe, 0x5c,
	0x3b, 0x5a, 0xdb, 0x11, 0x63, 0xd1, 0x15, 0x39, 0xfe, 0x2c, 0x76, 0xfc, 0x24, 0x61, 0xc2, 0x17,
	0x31, 0x4b, 0x14, 0xd9, 0x6a, 0x47, 0xc4, 0xa6, 0x24, 0xf8, 0xad, 0x53, 0x0e, 0x05, 0x60, 0x3f,
	0x6a, 0x60, 0x8c, 0x96, 0x42, 0x9e, 0xd4, 0xc1, 0xff, 0xf0, 0xa3, 0xd0, 0x8d, 0x43, 0x53, 0xeb,
	0x68, 0xfb, 0x4d, 0xef, 0xbb, 0xdc, 0x87, 0x21, 0xee, 0x82, 0xc1, 0x66, 0xc4, 0x7d, 0xc1, 0xf8,
	0x12, 0xad, 0x49, 0x14, 0xca, 0x53, 0x4e, 0x40, 0x68, 0x88, 0x78, 0x4a, 0x66, 0x5d, 0x22, 0x72,
	0xc6, 0x3e, 0xb4, 0x02, 0x96, 0x25, 0x61, 0x9c, 0x44, 0xe3, 0x80, 0xcd, 0xcd, 0x46, 0x8e, 0x19,
	0x6e, 0xbb, 0xb7, 0x8a, 0x31, 0x50, 0xe8, 0x80, 0xcd, 0xdd, 0x53, 0xcf, 0x08, 0xde, 0x56, 0x7b,
	0x01, 0x7f, 0x2a, 0xd1, 0x46, 0x79, 0xa3, 0x2c, 0xc5, 0x5f, 0x50, 0x5b, 0x45, 0xcb, 0x27, 0xfc,
	0x07, 0x7a, 0x2a, 0x11, 0x19, 0xe8, 0x9b, 0xa7, 0x36, 0xdc, 0x01, 0x98, 0x70, 0xf2, 0x05, 0x85,
	0x63, 0x5f, 0xc8, 0x48, 0x75, 0xaf, 0xa9, 0x2e, 0xc7, 0x62, 0x59, 0x86, 0x53, 0xca, 0x32, 0x3e,
	0x91, 0x55, 0x1b, 0x45, 0x99, 0xf2, 0x34, 0x0c, 0xed, 0x73, 0xc0, 0x8a, 0xb9, 0x47, 0xd7, 0x19,
	0xa5, 0x02, 0x5d, 0xd0, 0x8b, 0x1f, 0x5c, 0x26, 0x30, 0x5c, 0xab, 0xb7, 0xfe, 0xd7, 0x54, 0x9f,
	0x28, 0xa6, 0x7d, 0x01, 0xe6, 0xbb, 0x1a, 0xa5, 0xde, 0xd1, 0x2a, 0x7d, 0xa1, 0xd7, 0xf9, 0x58,
	0x4f, 0x3d, 0x54, 0x7c, 0xf7, 0x45, 0x83, 0x56, 0x05, 0x4d, 0xf1, 0x12, 0xf4, 0x13, 0x59, 0x0f,
	0xbb, 0x9f, 0x84, 0x2a, 0x7c, 0xad, 0x8d, 0x3e, 0xf6, 0xd6, 0xfd, 0xd3, 0xf3, 0x43, 0xed, 0xaf,
	0x6d, 0x38, 0x37, 0x07, 0x8e, 0xa2, 0xf5, 0x55, 0xa5, 0xdc, 0xab, 0x7e, 0x46, 0x02, 0xf7, 0x36,
	0xa6, 0xfd, 0xb2, 0x9d, 0x29, 0xed, 0x10, 0x7f, 0x57, 0xec, 0x9c, 0x45, 0x1c, 0xde, 0x05, 0xba,
	0xfc, 0x50, 0x0f, 0x5f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x4d, 0x7f, 0x4f, 0x29, 0x13, 0x03, 0x00,
	0x00,
}
