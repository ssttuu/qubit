// Code generated by protoc-gen-go. DO NOT EDIT.
// source: organizations/organizations.proto

/*
Package organizations is a generated protocol buffer package.

It is generated from these files:
	organizations/organizations.proto

It has these top-level messages:
	Organization
	ListOrganizationsRequest
	ListOrganizationsResponse
	GetOrganizationRequest
	CreateOrganizationRequest
	UpdateOrganizationRequest
	DeleteOrganizationRequest
*/
package organizations

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Organization struct {
	Id   int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Organization) Reset()                    { *m = Organization{} }
func (m *Organization) String() string            { return proto.CompactTextString(m) }
func (*Organization) ProtoMessage()               {}
func (*Organization) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Organization) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Organization) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListOrganizationsRequest struct {
	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListOrganizationsRequest) Reset()                    { *m = ListOrganizationsRequest{} }
func (m *ListOrganizationsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListOrganizationsRequest) ProtoMessage()               {}
func (*ListOrganizationsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListOrganizationsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListOrganizationsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListOrganizationsResponse struct {
	Organizations []*Organization `protobuf:"bytes,1,rep,name=organizations" json:"organizations,omitempty"`
	NextPageToken string          `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListOrganizationsResponse) Reset()                    { *m = ListOrganizationsResponse{} }
func (m *ListOrganizationsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListOrganizationsResponse) ProtoMessage()               {}
func (*ListOrganizationsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListOrganizationsResponse) GetOrganizations() []*Organization {
	if m != nil {
		return m.Organizations
	}
	return nil
}

func (m *ListOrganizationsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetOrganizationRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetOrganizationRequest) Reset()                    { *m = GetOrganizationRequest{} }
func (m *GetOrganizationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOrganizationRequest) ProtoMessage()               {}
func (*GetOrganizationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetOrganizationRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CreateOrganizationRequest struct {
	Organization *Organization `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
}

func (m *CreateOrganizationRequest) Reset()                    { *m = CreateOrganizationRequest{} }
func (m *CreateOrganizationRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateOrganizationRequest) ProtoMessage()               {}
func (*CreateOrganizationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateOrganizationRequest) GetOrganization() *Organization {
	if m != nil {
		return m.Organization
	}
	return nil
}

type UpdateOrganizationRequest struct {
	Id           int64         `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Organization *Organization `protobuf:"bytes,2,opt,name=organization" json:"organization,omitempty"`
}

func (m *UpdateOrganizationRequest) Reset()                    { *m = UpdateOrganizationRequest{} }
func (m *UpdateOrganizationRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateOrganizationRequest) ProtoMessage()               {}
func (*UpdateOrganizationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateOrganizationRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateOrganizationRequest) GetOrganization() *Organization {
	if m != nil {
		return m.Organization
	}
	return nil
}

type DeleteOrganizationRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteOrganizationRequest) Reset()                    { *m = DeleteOrganizationRequest{} }
func (m *DeleteOrganizationRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteOrganizationRequest) ProtoMessage()               {}
func (*DeleteOrganizationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteOrganizationRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Organization)(nil), "organizations.Organization")
	proto.RegisterType((*ListOrganizationsRequest)(nil), "organizations.ListOrganizationsRequest")
	proto.RegisterType((*ListOrganizationsResponse)(nil), "organizations.ListOrganizationsResponse")
	proto.RegisterType((*GetOrganizationRequest)(nil), "organizations.GetOrganizationRequest")
	proto.RegisterType((*CreateOrganizationRequest)(nil), "organizations.CreateOrganizationRequest")
	proto.RegisterType((*UpdateOrganizationRequest)(nil), "organizations.UpdateOrganizationRequest")
	proto.RegisterType((*DeleteOrganizationRequest)(nil), "organizations.DeleteOrganizationRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Organizations service

type OrganizationsClient interface {
	List(ctx context.Context, in *ListOrganizationsRequest, opts ...grpc.CallOption) (*ListOrganizationsResponse, error)
	Get(ctx context.Context, in *GetOrganizationRequest, opts ...grpc.CallOption) (*Organization, error)
	Create(ctx context.Context, in *CreateOrganizationRequest, opts ...grpc.CallOption) (*Organization, error)
	Update(ctx context.Context, in *UpdateOrganizationRequest, opts ...grpc.CallOption) (*Organization, error)
	Delete(ctx context.Context, in *DeleteOrganizationRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type organizationsClient struct {
	cc *grpc.ClientConn
}

func NewOrganizationsClient(cc *grpc.ClientConn) OrganizationsClient {
	return &organizationsClient{cc}
}

func (c *organizationsClient) List(ctx context.Context, in *ListOrganizationsRequest, opts ...grpc.CallOption) (*ListOrganizationsResponse, error) {
	out := new(ListOrganizationsResponse)
	err := grpc.Invoke(ctx, "/organizations.Organizations/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationsClient) Get(ctx context.Context, in *GetOrganizationRequest, opts ...grpc.CallOption) (*Organization, error) {
	out := new(Organization)
	err := grpc.Invoke(ctx, "/organizations.Organizations/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationsClient) Create(ctx context.Context, in *CreateOrganizationRequest, opts ...grpc.CallOption) (*Organization, error) {
	out := new(Organization)
	err := grpc.Invoke(ctx, "/organizations.Organizations/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationsClient) Update(ctx context.Context, in *UpdateOrganizationRequest, opts ...grpc.CallOption) (*Organization, error) {
	out := new(Organization)
	err := grpc.Invoke(ctx, "/organizations.Organizations/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationsClient) Delete(ctx context.Context, in *DeleteOrganizationRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/organizations.Organizations/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Organizations service

type OrganizationsServer interface {
	List(context.Context, *ListOrganizationsRequest) (*ListOrganizationsResponse, error)
	Get(context.Context, *GetOrganizationRequest) (*Organization, error)
	Create(context.Context, *CreateOrganizationRequest) (*Organization, error)
	Update(context.Context, *UpdateOrganizationRequest) (*Organization, error)
	Delete(context.Context, *DeleteOrganizationRequest) (*google_protobuf1.Empty, error)
}

func RegisterOrganizationsServer(s *grpc.Server, srv OrganizationsServer) {
	s.RegisterService(&_Organizations_serviceDesc, srv)
}

func _Organizations_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOrganizationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizations.Organizations/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationsServer).List(ctx, req.(*ListOrganizationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organizations_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizations.Organizations/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationsServer).Get(ctx, req.(*GetOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organizations_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizations.Organizations/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationsServer).Create(ctx, req.(*CreateOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organizations_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizations.Organizations/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationsServer).Update(ctx, req.(*UpdateOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organizations_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizations.Organizations/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationsServer).Delete(ctx, req.(*DeleteOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Organizations_serviceDesc = grpc.ServiceDesc{
	ServiceName: "organizations.Organizations",
	HandlerType: (*OrganizationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Organizations_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Organizations_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Organizations_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Organizations_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Organizations_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "organizations/organizations.proto",
}

func init() { proto.RegisterFile("organizations/organizations.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 459 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x54, 0x4f, 0x8f, 0xd2, 0x50,
	0x10, 0x4f, 0x0b, 0x36, 0x32, 0x82, 0xc6, 0x31, 0x21, 0xb4, 0x68, 0x22, 0xcf, 0x20, 0x8d, 0x24,
	0x6d, 0x84, 0x93, 0x5e, 0x8c, 0x51, 0xe3, 0xc5, 0x44, 0x53, 0xff, 0x9c, 0x4c, 0x48, 0x09, 0xcf,
	0xa6, 0x11, 0xfa, 0x2a, 0x7d, 0x20, 0x62, 0xbc, 0x78, 0xd8, 0xc3, 0x5e, 0xf7, 0xa3, 0xed, 0x57,
	0xd8, 0xaf, 0xb1, 0xc9, 0xb6, 0xaf, 0xb0, 0xe9, 0x6b, 0x29, 0xb0, 0xa7, 0xbe, 0x99, 0x37, 0x33,
	0xbf, 0xdf, 0xcc, 0x6f, 0xfa, 0xa0, 0xc3, 0xe6, 0x9e, 0x1b, 0xf8, 0x6b, 0x97, 0xfb, 0x2c, 0x88,
	0x6c, 0xc9, 0xb2, 0xc2, 0x39, 0xe3, 0x0c, 0x1b, 0x92, 0xd3, 0x78, 0xe8, 0x31, 0xe6, 0x4d, 0xa9,
	0xed, 0x86, 0xbe, 0xed, 0x06, 0x01, 0xe3, 0xd9, 0x60, 0xa3, 0xbd, 0xb9, 0x15, 0xd6, 0x78, 0xf1,
	0xc3, 0xa6, 0xb3, 0x90, 0xff, 0x49, 0x2f, 0xc9, 0x00, 0xea, 0x1f, 0x33, 0xb5, 0xf0, 0x2e, 0xa8,
	0xfe, 0xa4, 0xa5, 0x3c, 0x56, 0xcc, 0x8a, 0x13, 0x9f, 0x10, 0xa1, 0x1a, 0xb8, 0x33, 0xda, 0x52,
	0x63, 0x4f, 0xcd, 0x11, 0x67, 0xf2, 0x0d, 0x5a, 0x1f, 0xfc, 0x88, 0x67, 0xf3, 0x22, 0x87, 0xfe,
	0x5a, 0xd0, 0x88, 0x63, 0x1b, 0x6a, 0xa1, 0xeb, 0xd1, 0x51, 0xe4, 0xaf, 0xa9, 0x28, 0x73, 0xcb,
	0xb9, 0x9d, 0x38, 0x3e, 0xc7, 0x36, 0x3e, 0x02, 0x10, 0x97, 0x9c, 0xfd, 0xa4, 0xc1, 0xa6, 0xa4,
	0x08, 0xff, 0x92, 0x38, 0xc8, 0x89, 0x02, 0xfa, 0x8e, 0xc2, 0x51, 0x18, 0x7f, 0x28, 0xbe, 0x06,
	0xb9, 0xeb, 0xb8, 0x7a, 0xc5, 0xbc, 0x33, 0x68, 0x5b, 0xf2, 0x80, 0xb2, 0xc9, 0x8e, 0x9c, 0x81,
	0x4f, 0xe1, 0x5e, 0x40, 0x57, 0x7c, 0x54, 0x20, 0xd1, 0x48, 0xdc, 0x9f, 0xae, 0x89, 0x98, 0xd0,
	0x7c, 0x4f, 0x25, 0x1a, 0xdb, 0xf6, 0x72, 0xe3, 0x21, 0xdf, 0x41, 0x7f, 0x33, 0xa7, 0x2e, 0xa7,
	0xbb, 0x82, 0x5f, 0x41, 0x3d, 0x8b, 0x2f, 0xd2, 0x0e, 0x10, 0x96, 0x12, 0xc8, 0x14, 0xf4, 0xaf,
	0xe1, 0xa4, 0xa4, 0x7a, 0x5e, 0xa9, 0x3c, 0x9a, 0x7a, 0x53, 0xb4, 0x3e, 0xe8, 0x6f, 0xe9, 0x94,
	0x1e, 0x85, 0x36, 0xb8, 0xac, 0x42, 0x43, 0xd2, 0x09, 0x39, 0x54, 0x13, 0xf1, 0xb0, 0x97, 0x43,
	0x2c, 0x5b, 0x15, 0xc3, 0x3c, 0x1c, 0x98, 0x4a, 0x4f, 0xf4, 0xff, 0xe7, 0x17, 0x67, 0xea, 0x03,
	0xbc, 0x6f, 0x2f, 0x9f, 0xcb, 0xff, 0x03, 0x2e, 0xa1, 0x12, 0x4b, 0x85, 0xdd, 0x5c, 0xad, 0xdd,
	0xf2, 0x19, 0xfb, 0xa6, 0x41, 0xfa, 0x02, 0xa5, 0x8b, 0x4f, 0x0a, 0x28, 0xf6, 0xdf, 0xac, 0x39,
	0xf2, 0x27, 0xff, 0x70, 0x05, 0x5a, 0x2a, 0x3c, 0xe6, 0xdb, 0x28, 0xdd, 0x87, 0xfd, 0xe8, 0x3d,
	0x81, 0xde, 0x21, 0xc5, 0x1e, 0x5f, 0x4a, 0x32, 0xe1, 0xa9, 0x02, 0x5a, 0xba, 0x15, 0x05, 0xe8,
	0xd2, 0x65, 0xd9, 0x0f, 0xfd, 0x42, 0x40, 0x0f, 0x8d, 0x63, 0x1a, 0xcf, 0x91, 0xf9, 0x0d, 0x5a,
	0xba, 0x33, 0x05, 0x2e, 0xa5, 0xab, 0x64, 0x34, 0xad, 0xf4, 0x41, 0xb2, 0xb6, 0x0f, 0x92, 0xf5,
	0x2e, 0x79, 0x90, 0xb6, 0xf3, 0x7f, 0x76, 0x0c, 0x8d, 0xb1, 0x26, 0x92, 0x87, 0x57, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x5d, 0xd9, 0xf6, 0xc3, 0x2d, 0x05, 0x00, 0x00,
}
