// Code generated by protoc-gen-go. DO NOT EDIT.
// source: computations/computations.proto

/*
Package computations is a generated protocol buffer package.

It is generated from these files:
	computations/computations.proto

It has these top-level messages:
	Computation
	ComputationStatus
	CreateComputationRequest
	GetComputationStatusRequest
*/
package computations

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import geometry "github.com/stupschwartz/qubit/proto-gen/go/geometry"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Computation struct {
	Id          string                  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OperatorKey string                  `protobuf:"bytes,2,opt,name=operator_key,json=operatorKey" json:"operator_key,omitempty"`
	Time        float64                 `protobuf:"fixed64,3,opt,name=time" json:"time,omitempty"`
	BoundingBox *geometry.BoundingBox2D `protobuf:"bytes,4,opt,name=bounding_box,json=boundingBox" json:"bounding_box,omitempty"`
	ResourceId  string                  `protobuf:"bytes,5,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
}

func (m *Computation) Reset()                    { *m = Computation{} }
func (m *Computation) String() string            { return proto.CompactTextString(m) }
func (*Computation) ProtoMessage()               {}
func (*Computation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Computation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Computation) GetOperatorKey() string {
	if m != nil {
		return m.OperatorKey
	}
	return ""
}

func (m *Computation) GetTime() float64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Computation) GetBoundingBox() *geometry.BoundingBox2D {
	if m != nil {
		return m.BoundingBox
	}
	return nil
}

func (m *Computation) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

type ComputationStatus struct {
	Id            string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ComputationId string `protobuf:"bytes,2,opt,name=computation_id,json=computationId" json:"computation_id,omitempty"`
	// TODO: Enum type?
	Status    int32 `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	CreatedAt int64 `protobuf:"varint,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *ComputationStatus) Reset()                    { *m = ComputationStatus{} }
func (m *ComputationStatus) String() string            { return proto.CompactTextString(m) }
func (*ComputationStatus) ProtoMessage()               {}
func (*ComputationStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ComputationStatus) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ComputationStatus) GetComputationId() string {
	if m != nil {
		return m.ComputationId
	}
	return ""
}

func (m *ComputationStatus) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ComputationStatus) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

type CreateComputationRequest struct {
	Computation *Computation `protobuf:"bytes,1,opt,name=computation" json:"computation,omitempty"`
}

func (m *CreateComputationRequest) Reset()                    { *m = CreateComputationRequest{} }
func (m *CreateComputationRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateComputationRequest) ProtoMessage()               {}
func (*CreateComputationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateComputationRequest) GetComputation() *Computation {
	if m != nil {
		return m.Computation
	}
	return nil
}

type GetComputationStatusRequest struct {
	ComputationId string `protobuf:"bytes,1,opt,name=computation_id,json=computationId" json:"computation_id,omitempty"`
}

func (m *GetComputationStatusRequest) Reset()                    { *m = GetComputationStatusRequest{} }
func (m *GetComputationStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*GetComputationStatusRequest) ProtoMessage()               {}
func (*GetComputationStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetComputationStatusRequest) GetComputationId() string {
	if m != nil {
		return m.ComputationId
	}
	return ""
}

func init() {
	proto.RegisterType((*Computation)(nil), "computations.Computation")
	proto.RegisterType((*ComputationStatus)(nil), "computations.ComputationStatus")
	proto.RegisterType((*CreateComputationRequest)(nil), "computations.CreateComputationRequest")
	proto.RegisterType((*GetComputationStatusRequest)(nil), "computations.GetComputationStatusRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Computations service

type ComputationsClient interface {
	CreateComputation(ctx context.Context, in *CreateComputationRequest, opts ...grpc.CallOption) (*ComputationStatus, error)
	GetComputationStatus(ctx context.Context, in *GetComputationStatusRequest, opts ...grpc.CallOption) (*ComputationStatus, error)
}

type computationsClient struct {
	cc *grpc.ClientConn
}

func NewComputationsClient(cc *grpc.ClientConn) ComputationsClient {
	return &computationsClient{cc}
}

func (c *computationsClient) CreateComputation(ctx context.Context, in *CreateComputationRequest, opts ...grpc.CallOption) (*ComputationStatus, error) {
	out := new(ComputationStatus)
	err := grpc.Invoke(ctx, "/computations.Computations/CreateComputation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *computationsClient) GetComputationStatus(ctx context.Context, in *GetComputationStatusRequest, opts ...grpc.CallOption) (*ComputationStatus, error) {
	out := new(ComputationStatus)
	err := grpc.Invoke(ctx, "/computations.Computations/GetComputationStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Computations service

type ComputationsServer interface {
	CreateComputation(context.Context, *CreateComputationRequest) (*ComputationStatus, error)
	GetComputationStatus(context.Context, *GetComputationStatusRequest) (*ComputationStatus, error)
}

func RegisterComputationsServer(s *grpc.Server, srv ComputationsServer) {
	s.RegisterService(&_Computations_serviceDesc, srv)
}

func _Computations_CreateComputation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateComputationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputationsServer).CreateComputation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/computations.Computations/CreateComputation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputationsServer).CreateComputation(ctx, req.(*CreateComputationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Computations_GetComputationStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetComputationStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputationsServer).GetComputationStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/computations.Computations/GetComputationStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputationsServer).GetComputationStatus(ctx, req.(*GetComputationStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Computations_serviceDesc = grpc.ServiceDesc{
	ServiceName: "computations.Computations",
	HandlerType: (*ComputationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateComputation",
			Handler:    _Computations_CreateComputation_Handler,
		},
		{
			MethodName: "GetComputationStatus",
			Handler:    _Computations_GetComputationStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "computations/computations.proto",
}

func init() { proto.RegisterFile("computations/computations.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 351 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x92, 0x4f, 0x4f, 0xf2, 0x40,
	0x10, 0xc6, 0xdf, 0xe5, 0x5f, 0xc2, 0x6c, 0x5f, 0x12, 0x27, 0x46, 0x2a, 0xc6, 0xa0, 0x4d, 0x34,
	0x7a, 0x81, 0xa4, 0xde, 0xf4, 0x24, 0x90, 0x18, 0xe2, 0xad, 0x1e, 0xbc, 0xd9, 0xb4, 0x74, 0x42,
	0x1a, 0x03, 0x8b, 0xdb, 0x6d, 0x02, 0x47, 0x3f, 0x92, 0xdf, 0xc5, 0x0f, 0x64, 0x5d, 0xa8, 0x2c,
	0x14, 0x8c, 0xa7, 0xce, 0x3c, 0x33, 0x3b, 0xf3, 0x7b, 0xb6, 0x0b, 0xed, 0x91, 0x98, 0xcc, 0x52,
	0x15, 0xa8, 0x58, 0x4c, 0x93, 0xae, 0x99, 0x74, 0x66, 0x52, 0x28, 0x81, 0x96, 0xa9, 0xb5, 0x9a,
	0x63, 0x12, 0x13, 0x52, 0x72, 0xd1, 0xcd, 0x83, 0x65, 0x9b, 0xf3, 0xc1, 0x80, 0xf7, 0xd7, 0x9d,
	0xd8, 0x80, 0x52, 0x1c, 0xd9, 0xec, 0x8c, 0x5d, 0xd5, 0xbd, 0x2c, 0xc2, 0x73, 0xb0, 0xc4, 0x8c,
	0x64, 0xa0, 0x84, 0xf4, 0x5f, 0x69, 0x61, 0x97, 0x74, 0x85, 0xe7, 0xda, 0x23, 0x2d, 0x10, 0xa1,
	0xa2, 0xe2, 0x09, 0xd9, 0xe5, 0xac, 0xc4, 0x3c, 0x1d, 0xe3, 0x2d, 0x58, 0xa1, 0x48, 0xa7, 0x51,
	0x3c, 0x1d, 0xfb, 0xa1, 0x98, 0xdb, 0x95, 0xac, 0xc6, 0xdd, 0x66, 0xe7, 0x67, 0x7b, 0x6f, 0x55,
	0xed, 0x89, 0xb9, 0x3b, 0xf0, 0x78, 0xb8, 0x4e, 0xb1, 0x0d, 0x5c, 0x52, 0x22, 0x52, 0x39, 0x22,
	0x3f, 0x63, 0xa9, 0xea, 0x8d, 0x90, 0x4b, 0xc3, 0xc8, 0x79, 0x67, 0x70, 0x60, 0x30, 0x3f, 0x65,
	0x9f, 0x34, 0x29, 0x90, 0x5f, 0x40, 0xc3, 0xb8, 0x82, 0xef, 0x49, 0x4b, 0xf6, 0xff, 0x86, 0x3a,
	0x8c, 0xf0, 0x08, 0x6a, 0x89, 0x1e, 0xa0, 0xf9, 0xab, 0xde, 0x2a, 0xc3, 0x53, 0x80, 0x91, 0xa4,
	0x40, 0x51, 0xe4, 0x07, 0x4a, 0xf3, 0x97, 0xbd, 0xfa, 0x4a, 0xb9, 0x57, 0xce, 0x33, 0xd8, 0x7d,
	0x9d, 0x18, 0x20, 0x1e, 0xbd, 0xa5, 0x94, 0x28, 0xbc, 0x03, 0x6e, 0xec, 0xd0, 0x48, 0xdc, 0x3d,
	0xee, 0x6c, 0xfc, 0x24, 0xf3, 0x98, 0xd9, 0xed, 0x0c, 0xe0, 0xe4, 0x81, 0x54, 0xc1, 0x5e, 0x3e,
	0xbb, 0xe8, 0x8a, 0xed, 0x70, 0xe5, 0x7e, 0x32, 0xb0, 0x8c, 0x19, 0x09, 0xbe, 0x64, 0x57, 0xb6,
	0xcd, 0x8b, 0x97, 0x5b, 0x4c, 0x7b, 0x0c, 0xb5, 0xda, 0x7b, 0xd9, 0x97, 0x70, 0xce, 0x3f, 0x8c,
	0xe0, 0x70, 0x17, 0x36, 0x5e, 0x6f, 0x1e, 0xfd, 0xc5, 0xda, 0x1f, 0xb6, 0x84, 0x35, 0xfd, 0x68,
	0x6f, 0xbe, 0x02, 0x00, 0x00, 0xff, 0xff, 0x22, 0x6e, 0x3b, 0x65, 0xfe, 0x02, 0x00, 0x00,
}
