// Code generated by protoc-gen-go. DO NOT EDIT.
// source: operators.proto

/*
Package operators is a generated protocol buffer package.

It is generated from these files:
	operators.proto

It has these top-level messages:
	Operator
	ListOperatorsRequest
	ListOperatorsResponse
	GetOperatorRequest
	CreateOperatorRequest
	UpdateOperatorRequest
	DeleteOperatorRequest
	RenderOperatorRequest
	RenderOperatorResponse
*/
package operators

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
import geometry "github.com/stupschwartz/qubit/server/protos/geometry"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Operator struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *Operator) Reset()                    { *m = Operator{} }
func (m *Operator) String() string            { return proto.CompactTextString(m) }
func (*Operator) ProtoMessage()               {}
func (*Operator) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Operator) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListOperatorsRequest struct {
	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId" json:"organization_id,omitempty"`
	SceneId        string `protobuf:"bytes,2,opt,name=scene_id,json=sceneId" json:"scene_id,omitempty"`
	PageSize       int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken      string `protobuf:"bytes,4,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListOperatorsRequest) Reset()                    { *m = ListOperatorsRequest{} }
func (m *ListOperatorsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListOperatorsRequest) ProtoMessage()               {}
func (*ListOperatorsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListOperatorsRequest) GetOrganizationId() string {
	if m != nil {
		return m.OrganizationId
	}
	return ""
}

func (m *ListOperatorsRequest) GetSceneId() string {
	if m != nil {
		return m.SceneId
	}
	return ""
}

func (m *ListOperatorsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListOperatorsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListOperatorsResponse struct {
	Operators     []*Operator `protobuf:"bytes,1,rep,name=operators" json:"operators,omitempty"`
	NextPageToken string      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListOperatorsResponse) Reset()                    { *m = ListOperatorsResponse{} }
func (m *ListOperatorsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListOperatorsResponse) ProtoMessage()               {}
func (*ListOperatorsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListOperatorsResponse) GetOperators() []*Operator {
	if m != nil {
		return m.Operators
	}
	return nil
}

func (m *ListOperatorsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetOperatorRequest struct {
	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId" json:"organization_id,omitempty"`
	SceneId        string `protobuf:"bytes,2,opt,name=scene_id,json=sceneId" json:"scene_id,omitempty"`
	OperatorId     string `protobuf:"bytes,3,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
}

func (m *GetOperatorRequest) Reset()                    { *m = GetOperatorRequest{} }
func (m *GetOperatorRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOperatorRequest) ProtoMessage()               {}
func (*GetOperatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetOperatorRequest) GetOrganizationId() string {
	if m != nil {
		return m.OrganizationId
	}
	return ""
}

func (m *GetOperatorRequest) GetSceneId() string {
	if m != nil {
		return m.SceneId
	}
	return ""
}

func (m *GetOperatorRequest) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

type CreateOperatorRequest struct {
	OrganizationId string    `protobuf:"bytes,1,opt,name=organization_id,json=organizationId" json:"organization_id,omitempty"`
	SceneId        string    `protobuf:"bytes,2,opt,name=scene_id,json=sceneId" json:"scene_id,omitempty"`
	Operator       *Operator `protobuf:"bytes,3,opt,name=operator" json:"operator,omitempty"`
}

func (m *CreateOperatorRequest) Reset()                    { *m = CreateOperatorRequest{} }
func (m *CreateOperatorRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateOperatorRequest) ProtoMessage()               {}
func (*CreateOperatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateOperatorRequest) GetOrganizationId() string {
	if m != nil {
		return m.OrganizationId
	}
	return ""
}

func (m *CreateOperatorRequest) GetSceneId() string {
	if m != nil {
		return m.SceneId
	}
	return ""
}

func (m *CreateOperatorRequest) GetOperator() *Operator {
	if m != nil {
		return m.Operator
	}
	return nil
}

type UpdateOperatorRequest struct {
	OrganizationId string    `protobuf:"bytes,1,opt,name=organization_id,json=organizationId" json:"organization_id,omitempty"`
	SceneId        string    `protobuf:"bytes,2,opt,name=scene_id,json=sceneId" json:"scene_id,omitempty"`
	OperatorId     string    `protobuf:"bytes,3,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
	Operator       *Operator `protobuf:"bytes,4,opt,name=operator" json:"operator,omitempty"`
}

func (m *UpdateOperatorRequest) Reset()                    { *m = UpdateOperatorRequest{} }
func (m *UpdateOperatorRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateOperatorRequest) ProtoMessage()               {}
func (*UpdateOperatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateOperatorRequest) GetOrganizationId() string {
	if m != nil {
		return m.OrganizationId
	}
	return ""
}

func (m *UpdateOperatorRequest) GetSceneId() string {
	if m != nil {
		return m.SceneId
	}
	return ""
}

func (m *UpdateOperatorRequest) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

func (m *UpdateOperatorRequest) GetOperator() *Operator {
	if m != nil {
		return m.Operator
	}
	return nil
}

type DeleteOperatorRequest struct {
	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId" json:"organization_id,omitempty"`
	SceneId        string `protobuf:"bytes,2,opt,name=scene_id,json=sceneId" json:"scene_id,omitempty"`
	OperatorId     string `protobuf:"bytes,3,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
}

func (m *DeleteOperatorRequest) Reset()                    { *m = DeleteOperatorRequest{} }
func (m *DeleteOperatorRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteOperatorRequest) ProtoMessage()               {}
func (*DeleteOperatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteOperatorRequest) GetOrganizationId() string {
	if m != nil {
		return m.OrganizationId
	}
	return ""
}

func (m *DeleteOperatorRequest) GetSceneId() string {
	if m != nil {
		return m.SceneId
	}
	return ""
}

func (m *DeleteOperatorRequest) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

type RenderOperatorRequest struct {
	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId" json:"organization_id,omitempty"`
	SceneId        string `protobuf:"bytes,2,opt,name=scene_id,json=sceneId" json:"scene_id,omitempty"`
	OperatorId     string `protobuf:"bytes,3,opt,name=operator_id,json=operatorId" json:"operator_id,omitempty"`
	// TODO: use double?
	Frame       int32                   `protobuf:"varint,4,opt,name=frame" json:"frame,omitempty"`
	BoundingBox *geometry.BoundingBox2D `protobuf:"bytes,5,opt,name=bounding_box,json=boundingBox" json:"bounding_box,omitempty"`
}

func (m *RenderOperatorRequest) Reset()                    { *m = RenderOperatorRequest{} }
func (m *RenderOperatorRequest) String() string            { return proto.CompactTextString(m) }
func (*RenderOperatorRequest) ProtoMessage()               {}
func (*RenderOperatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RenderOperatorRequest) GetOrganizationId() string {
	if m != nil {
		return m.OrganizationId
	}
	return ""
}

func (m *RenderOperatorRequest) GetSceneId() string {
	if m != nil {
		return m.SceneId
	}
	return ""
}

func (m *RenderOperatorRequest) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

func (m *RenderOperatorRequest) GetFrame() int32 {
	if m != nil {
		return m.Frame
	}
	return 0
}

func (m *RenderOperatorRequest) GetBoundingBox() *geometry.BoundingBox2D {
	if m != nil {
		return m.BoundingBox
	}
	return nil
}

type RenderOperatorResponse struct {
	ResultUrl  string `protobuf:"bytes,1,opt,name=result_url,json=resultUrl" json:"result_url,omitempty"`
	ResultType string `protobuf:"bytes,2,opt,name=result_type,json=resultType" json:"result_type,omitempty"`
}

func (m *RenderOperatorResponse) Reset()                    { *m = RenderOperatorResponse{} }
func (m *RenderOperatorResponse) String() string            { return proto.CompactTextString(m) }
func (*RenderOperatorResponse) ProtoMessage()               {}
func (*RenderOperatorResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RenderOperatorResponse) GetResultUrl() string {
	if m != nil {
		return m.ResultUrl
	}
	return ""
}

func (m *RenderOperatorResponse) GetResultType() string {
	if m != nil {
		return m.ResultType
	}
	return ""
}

func init() {
	proto.RegisterType((*Operator)(nil), "operators.Operator")
	proto.RegisterType((*ListOperatorsRequest)(nil), "operators.ListOperatorsRequest")
	proto.RegisterType((*ListOperatorsResponse)(nil), "operators.ListOperatorsResponse")
	proto.RegisterType((*GetOperatorRequest)(nil), "operators.GetOperatorRequest")
	proto.RegisterType((*CreateOperatorRequest)(nil), "operators.CreateOperatorRequest")
	proto.RegisterType((*UpdateOperatorRequest)(nil), "operators.UpdateOperatorRequest")
	proto.RegisterType((*DeleteOperatorRequest)(nil), "operators.DeleteOperatorRequest")
	proto.RegisterType((*RenderOperatorRequest)(nil), "operators.RenderOperatorRequest")
	proto.RegisterType((*RenderOperatorResponse)(nil), "operators.RenderOperatorResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Operators service

type OperatorsClient interface {
	List(ctx context.Context, in *ListOperatorsRequest, opts ...grpc.CallOption) (*ListOperatorsResponse, error)
	Get(ctx context.Context, in *GetOperatorRequest, opts ...grpc.CallOption) (*Operator, error)
	Create(ctx context.Context, in *CreateOperatorRequest, opts ...grpc.CallOption) (*Operator, error)
	Update(ctx context.Context, in *UpdateOperatorRequest, opts ...grpc.CallOption) (*Operator, error)
	Delete(ctx context.Context, in *DeleteOperatorRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	Render(ctx context.Context, in *RenderOperatorRequest, opts ...grpc.CallOption) (*RenderOperatorResponse, error)
}

type operatorsClient struct {
	cc *grpc.ClientConn
}

func NewOperatorsClient(cc *grpc.ClientConn) OperatorsClient {
	return &operatorsClient{cc}
}

func (c *operatorsClient) List(ctx context.Context, in *ListOperatorsRequest, opts ...grpc.CallOption) (*ListOperatorsResponse, error) {
	out := new(ListOperatorsResponse)
	err := grpc.Invoke(ctx, "/operators.Operators/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorsClient) Get(ctx context.Context, in *GetOperatorRequest, opts ...grpc.CallOption) (*Operator, error) {
	out := new(Operator)
	err := grpc.Invoke(ctx, "/operators.Operators/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorsClient) Create(ctx context.Context, in *CreateOperatorRequest, opts ...grpc.CallOption) (*Operator, error) {
	out := new(Operator)
	err := grpc.Invoke(ctx, "/operators.Operators/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorsClient) Update(ctx context.Context, in *UpdateOperatorRequest, opts ...grpc.CallOption) (*Operator, error) {
	out := new(Operator)
	err := grpc.Invoke(ctx, "/operators.Operators/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorsClient) Delete(ctx context.Context, in *DeleteOperatorRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/operators.Operators/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorsClient) Render(ctx context.Context, in *RenderOperatorRequest, opts ...grpc.CallOption) (*RenderOperatorResponse, error) {
	out := new(RenderOperatorResponse)
	err := grpc.Invoke(ctx, "/operators.Operators/Render", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Operators service

type OperatorsServer interface {
	List(context.Context, *ListOperatorsRequest) (*ListOperatorsResponse, error)
	Get(context.Context, *GetOperatorRequest) (*Operator, error)
	Create(context.Context, *CreateOperatorRequest) (*Operator, error)
	Update(context.Context, *UpdateOperatorRequest) (*Operator, error)
	Delete(context.Context, *DeleteOperatorRequest) (*google_protobuf1.Empty, error)
	Render(context.Context, *RenderOperatorRequest) (*RenderOperatorResponse, error)
}

func RegisterOperatorsServer(s *grpc.Server, srv OperatorsServer) {
	s.RegisterService(&_Operators_serviceDesc, srv)
}

func _Operators_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOperatorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/operators.Operators/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorsServer).List(ctx, req.(*ListOperatorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Operators_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOperatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/operators.Operators/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorsServer).Get(ctx, req.(*GetOperatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Operators_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOperatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/operators.Operators/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorsServer).Create(ctx, req.(*CreateOperatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Operators_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOperatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/operators.Operators/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorsServer).Update(ctx, req.(*UpdateOperatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Operators_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOperatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/operators.Operators/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorsServer).Delete(ctx, req.(*DeleteOperatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Operators_Render_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenderOperatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorsServer).Render(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/operators.Operators/Render",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorsServer).Render(ctx, req.(*RenderOperatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Operators_serviceDesc = grpc.ServiceDesc{
	ServiceName: "operators.Operators",
	HandlerType: (*OperatorsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Operators_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Operators_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Operators_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Operators_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Operators_Delete_Handler,
		},
		{
			MethodName: "Render",
			Handler:    _Operators_Render_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "operators.proto",
}

func init() { proto.RegisterFile("operators.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 654 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xc4, 0x95, 0x4d, 0x6f, 0xd3, 0x4c,
	0x10, 0xc7, 0xe5, 0xa6, 0x69, 0x93, 0xe9, 0xf3, 0xb4, 0xd2, 0xd2, 0x97, 0xe0, 0x52, 0xb5, 0xf8,
	0x00, 0x15, 0x07, 0x5b, 0x2d, 0xb7, 0x5e, 0x10, 0xa5, 0xa8, 0xaa, 0x00, 0x15, 0x4c, 0x82, 0x40,
	0x42, 0xb2, 0x1c, 0x3c, 0xb5, 0x2c, 0x12, 0xaf, 0x59, 0x6f, 0x50, 0x52, 0xc8, 0x85, 0x33, 0x07,
	0x04, 0x12, 0x12, 0x37, 0xee, 0x88, 0x23, 0x5f, 0x83, 0x0b, 0x5f, 0x81, 0x0f, 0xc2, 0x7a, 0xfd,
	0x9a, 0xe0, 0x02, 0x52, 0x53, 0xf5, 0xe6, 0x9d, 0x99, 0xd5, 0xfc, 0xf6, 0xbf, 0x9e, 0xff, 0xc2,
	0x02, 0x0d, 0x90, 0xd9, 0x9c, 0xb2, 0x50, 0x0f, 0x18, 0xe5, 0x94, 0xd4, 0xb3, 0x80, 0x7a, 0xc9,
	0xa5, 0xd4, 0xed, 0xa0, 0x61, 0x07, 0x9e, 0x61, 0xfb, 0x3e, 0xe5, 0x36, 0xf7, 0xa8, 0x9f, 0x14,
	0xaa, 0xab, 0x49, 0x56, 0xae, 0xda, 0xbd, 0x23, 0x03, 0xbb, 0x01, 0x1f, 0x24, 0xc9, 0x15, 0x17,
	0x69, 0x17, 0x39, 0x1b, 0x18, 0xe9, 0x47, 0x9c, 0xd0, 0x54, 0xa8, 0x1d, 0x26, 0x0d, 0xc8, 0x3c,
	0x4c, 0x79, 0x4e, 0x43, 0xd9, 0x50, 0x36, 0xeb, 0xa6, 0xf8, 0xd2, 0x3e, 0x2a, 0xb0, 0x78, 0xd7,
	0x0b, 0x79, 0x5a, 0x10, 0x9a, 0xf8, 0xa2, 0x87, 0x21, 0x27, 0x57, 0x05, 0x26, 0x73, 0x6d, 0xdf,
	0x3b, 0x96, 0x04, 0x56, 0xb6, 0x6b, 0xbe, 0x18, 0x3e, 0x70, 0xc8, 0x45, 0xa8, 0x85, 0xcf, 0xd0,
	0xc7, 0xa8, 0x62, 0x4a, 0x56, 0xcc, 0xca, 0xb5, 0x48, 0xad, 0x42, 0x3d, 0xb0, 0x5d, 0xb4, 0x42,
	0xef, 0x18, 0x1b, 0x15, 0x91, 0xab, 0x9a, 0xb5, 0x28, 0xf0, 0x50, 0xac, 0xc9, 0x1a, 0x80, 0x4c,
	0x72, 0xfa, 0x1c, 0xfd, 0xc6, 0xb4, 0xdc, 0x29, 0xcb, 0x9b, 0x51, 0x40, 0x63, 0xb0, 0x34, 0xc6,
	0x15, 0x06, 0x42, 0x08, 0x24, 0x5b, 0x90, 0xcb, 0x25, 0x90, 0x2a, 0x9b, 0x73, 0xdb, 0x17, 0xf4,
	0x5c, 0xd1, 0x74, 0x83, 0x99, 0x57, 0x91, 0x2b, 0xb0, 0xe0, 0x63, 0x9f, 0x5b, 0x85, 0x7e, 0x31,
	0xe9, 0xff, 0x51, 0xf8, 0x7e, 0xd6, 0x73, 0x00, 0x64, 0x1f, 0xb3, 0x96, 0x93, 0x54, 0x62, 0x1d,
	0xe6, 0x52, 0x9c, 0x28, 0x5b, 0x91, 0x59, 0x48, 0x43, 0x07, 0x8e, 0xf6, 0x56, 0x81, 0xa5, 0x5b,
	0x0c, 0x6d, 0x8e, 0x67, 0xd1, 0xde, 0x80, 0x5a, 0xda, 0x4b, 0xf6, 0x3e, 0x41, 0xb2, 0xac, 0x48,
	0xfb, 0x2a, 0x70, 0x5a, 0x81, 0x73, 0x46, 0x38, 0x7f, 0x53, 0x63, 0x84, 0x77, 0xfa, 0x5f, 0x78,
	0x5f, 0xc3, 0xd2, 0x1e, 0x76, 0xf0, 0x7c, 0x70, 0xb5, 0xef, 0x42, 0x2d, 0x13, 0x7d, 0x07, 0xd9,
	0xb9, 0xa8, 0xb5, 0x08, 0xd5, 0x23, 0x66, 0x77, 0x51, 0x4a, 0x55, 0x35, 0xe3, 0x05, 0xd9, 0x81,
	0xff, 0xda, 0xb4, 0xe7, 0x3b, 0x9e, 0xef, 0x5a, 0x6d, 0xda, 0x6f, 0x54, 0xa5, 0x8e, 0x2b, 0x7a,
	0x66, 0x0e, 0xbb, 0x49, 0x76, 0x97, 0xf6, 0xb7, 0xf7, 0xcc, 0xb9, 0x76, 0xbe, 0xd4, 0x1e, 0xc3,
	0xf2, 0xf8, 0x79, 0x92, 0xe9, 0x13, 0x53, 0xcb, 0x30, 0xec, 0x75, 0xb8, 0xd5, 0x63, 0x9d, 0xe4,
	0x2c, 0xf5, 0x38, 0xd2, 0x62, 0x9d, 0x88, 0x35, 0x49, 0xf3, 0x41, 0x80, 0xc9, 0x49, 0x92, 0x1d,
	0x4d, 0x11, 0xd9, 0xfe, 0x36, 0x0b, 0xf5, 0x6c, 0xa6, 0xc9, 0x7b, 0x05, 0xa6, 0xa3, 0x29, 0x27,
	0xeb, 0x85, 0xeb, 0x2d, 0xb3, 0x23, 0x75, 0xe3, 0xe4, 0x82, 0x98, 0x4c, 0xdb, 0x7f, 0xf3, 0xe3,
	0xe7, 0x87, 0xa9, 0x9b, 0xe4, 0x86, 0xf1, 0x72, 0xcb, 0x28, 0xaa, 0x1b, 0x1a, 0xaf, 0xc6, 0xee,
	0x60, 0x68, 0x48, 0x6d, 0x45, 0x22, 0xd5, 0x7c, 0x68, 0xe4, 0x6e, 0xf1, 0x4e, 0x81, 0x8a, 0xb0,
	0x01, 0xb2, 0x56, 0x68, 0xf9, 0xbb, 0x2d, 0xa8, 0x65, 0x7f, 0xa4, 0xd6, 0x92, 0x10, 0x87, 0xe4,
	0xde, 0x29, 0x21, 0x44, 0x75, 0x7e, 0xe5, 0xc3, 0x48, 0xa7, 0x99, 0xd8, 0x1d, 0x48, 0x51, 0x88,
	0x52, 0xc3, 0x28, 0x07, 0x7b, 0x20, 0xc1, 0xee, 0x68, 0xa7, 0x55, 0x67, 0x27, 0x9b, 0x39, 0xf2,
	0x59, 0x40, 0xc5, 0x1e, 0x31, 0x02, 0x55, 0x6a, 0x1b, 0xe5, 0x50, 0x96, 0x84, 0x7a, 0xa2, 0x4e,
	0x56, 0xad, 0x02, 0xe2, 0x27, 0x81, 0x18, 0xfb, 0xc2, 0x08, 0x62, 0xa9, 0x55, 0xa8, 0xcb, 0x7a,
	0xfc, 0xba, 0xea, 0xe9, 0xeb, 0xaa, 0xdf, 0x8e, 0x5e, 0xd7, 0xf4, 0x4e, 0xaf, 0x4d, 0xf8, 0x4e,
	0xbf, 0x08, 0xb6, 0x78, 0xc8, 0x46, 0xd8, 0x4a, 0x7d, 0x44, 0xbd, 0xfc, 0x87, 0x8a, 0xe4, 0xff,
	0x7f, 0x2a, 0x31, 0x1f, 0x69, 0xcd, 0xc9, 0x8a, 0xc9, 0x64, 0xb7, 0xf6, 0x8c, 0x14, 0xe5, 0xfa,
	0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2a, 0xef, 0x2e, 0x3c, 0xbc, 0x08, 0x00, 0x00,
}
