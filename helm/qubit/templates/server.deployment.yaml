apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.Server.AppName }}
spec:
  replicas: {{ .Values.Server.Replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
        maxSurge: {{ .Values.Server.MaxSurge }}
  template:
    metadata:
      labels:
        app: {{ .Values.Server.AppName }}
        version: {{ .Chart.Version }}
        release: {{ .Release.Name }}
        revision: {{ .Release.Revision | quote }}
    spec:
      containers:
      - name: esp
        image: gcr.io/endpoints-release/endpoints-runtime:1
        args: [
          "--http_port", "{{ .Values.Server.ExternalHttpPort }}",
          "--http2_port", "{{ .Values.Server.ExternalHttp2Port }}",
          "-s", "{{ .Values.Server.ApiName }}",
          "-v", "{{ .Values.Server.ApiId }}",
          "-a", "grpc://127.0.0.1:{{ .Values.Server.InternalPort }}"
        ]
        ports:
          - containerPort: {{ .Values.Server.ExternalHttpPort }}
          - containerPort: {{ .Values.Server.ExternalHttp2Port }}
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
      - name: server
        image: us.gcr.io/qubit-161916/qubit-server:{{ .Values.Githash }}
        ports:
          - containerPort: {{ .Values.Server.InternalPort }}
        env:
          - name: GOOGLE_PROJECT_ID
            value: "{{ .Values.GoogleProjectId }}"
          - name: DATASTORE_PROJECT_ID
            value: "{{ .Values.GoogleProjectId }}"
          - name: DATASTORE_DATASET
            value: "{{ .Values.DatastoreDataset }}"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/opt/etc/credentials/service-account-key-file.json"
          - name: STORAGE_BUCKET
            value: "{{ .Values.Server.StorageBucket }}"
          - name: PORT
            value: "{{ .Values.Server.InternalPort }}"
          - name: COMPUTE_SERVICE_URL
            value: "{{ .Values.Compute.AppName }}:{{ .Values.Compute.ExternalHttp2Port }}"
        volumeMounts:
          - name: google-credentials
            mountPath: /opt/etc/credentials
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
      volumes:
        - name: google-credentials
          secret:
            secretName: google-service-account
