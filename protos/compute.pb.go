// Code generated by protoc-gen-go.
// source: compute.proto
// DO NOT EDIT!

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	compute.proto

It has these top-level messages:
	RenderRequest
	RenderResponse
	ImageComponent
	ImagePlane
	ImageFrame
	Node
	Component
	Parameter
	BoundingBox
	Scene
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RenderRequest struct {
	Scene       *Scene       `protobuf:"bytes,1,opt,name=scene" json:"scene,omitempty"`
	Node        *Node        `protobuf:"bytes,2,opt,name=node" json:"node,omitempty"`
	BoundingBox *BoundingBox `protobuf:"bytes,3,opt,name=boundingBox" json:"boundingBox,omitempty"`
}

func (m *RenderRequest) Reset()                    { *m = RenderRequest{} }
func (m *RenderRequest) String() string            { return proto.CompactTextString(m) }
func (*RenderRequest) ProtoMessage()               {}
func (*RenderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RenderRequest) GetScene() *Scene {
	if m != nil {
		return m.Scene
	}
	return nil
}

func (m *RenderRequest) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *RenderRequest) GetBoundingBox() *BoundingBox {
	if m != nil {
		return m.BoundingBox
	}
	return nil
}

type RenderResponse struct {
	ImagePlane *ImagePlane `protobuf:"bytes,1,opt,name=imagePlane" json:"imagePlane,omitempty"`
}

func (m *RenderResponse) Reset()                    { *m = RenderResponse{} }
func (m *RenderResponse) String() string            { return proto.CompactTextString(m) }
func (*RenderResponse) ProtoMessage()               {}
func (*RenderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RenderResponse) GetImagePlane() *ImagePlane {
	if m != nil {
		return m.ImagePlane
	}
	return nil
}

type ImageComponent struct {
	Label  string    `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Width  int32     `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height int32     `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	Data   []float64 `protobuf:"fixed64,4,rep,packed,name=data" json:"data,omitempty"`
}

func (m *ImageComponent) Reset()                    { *m = ImageComponent{} }
func (m *ImageComponent) String() string            { return proto.CompactTextString(m) }
func (*ImageComponent) ProtoMessage()               {}
func (*ImageComponent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ImageComponent) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *ImageComponent) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *ImageComponent) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ImageComponent) GetData() []float64 {
	if m != nil {
		return m.Data
	}
	return nil
}

type ImagePlane struct {
	Label      string            `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Components []*ImageComponent `protobuf:"bytes,2,rep,name=components" json:"components,omitempty"`
}

func (m *ImagePlane) Reset()                    { *m = ImagePlane{} }
func (m *ImagePlane) String() string            { return proto.CompactTextString(m) }
func (*ImagePlane) ProtoMessage()               {}
func (*ImagePlane) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ImagePlane) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *ImagePlane) GetComponents() []*ImageComponent {
	if m != nil {
		return m.Components
	}
	return nil
}

type ImageFrame struct {
	ImagePlanes []*ImagePlane `protobuf:"bytes,1,rep,name=imagePlanes" json:"imagePlanes,omitempty"`
}

func (m *ImageFrame) Reset()                    { *m = ImageFrame{} }
func (m *ImageFrame) String() string            { return proto.CompactTextString(m) }
func (*ImageFrame) ProtoMessage()               {}
func (*ImageFrame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ImageFrame) GetImagePlanes() []*ImagePlane {
	if m != nil {
		return m.ImagePlanes
	}
	return nil
}

type Node struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Component struct {
	Label string  `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=value" json:"value,omitempty"`
}

func (m *Component) Reset()                    { *m = Component{} }
func (m *Component) String() string            { return proto.CompactTextString(m) }
func (*Component) ProtoMessage()               {}
func (*Component) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Component) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Component) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Parameter struct {
	Name       string       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Components []*Component `protobuf:"bytes,2,rep,name=components" json:"components,omitempty"`
}

func (m *Parameter) Reset()                    { *m = Parameter{} }
func (m *Parameter) String() string            { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()               {}
func (*Parameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Parameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Parameter) GetComponents() []*Component {
	if m != nil {
		return m.Components
	}
	return nil
}

// BoundingBox
type BoundingBox struct {
	StartX int64 `protobuf:"varint,1,opt,name=start_x,json=startX" json:"start_x,omitempty"`
	StartY int64 `protobuf:"varint,2,opt,name=start_y,json=startY" json:"start_y,omitempty"`
	EndX   int64 `protobuf:"varint,3,opt,name=end_x,json=endX" json:"end_x,omitempty"`
	EndY   int64 `protobuf:"varint,4,opt,name=end_y,json=endY" json:"end_y,omitempty"`
}

func (m *BoundingBox) Reset()                    { *m = BoundingBox{} }
func (m *BoundingBox) String() string            { return proto.CompactTextString(m) }
func (*BoundingBox) ProtoMessage()               {}
func (*BoundingBox) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *BoundingBox) GetStartX() int64 {
	if m != nil {
		return m.StartX
	}
	return 0
}

func (m *BoundingBox) GetStartY() int64 {
	if m != nil {
		return m.StartY
	}
	return 0
}

func (m *BoundingBox) GetEndX() int64 {
	if m != nil {
		return m.EndX
	}
	return 0
}

func (m *BoundingBox) GetEndY() int64 {
	if m != nil {
		return m.EndY
	}
	return 0
}

// Scene
type Scene struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *Scene) Reset()                    { *m = Scene{} }
func (m *Scene) String() string            { return proto.CompactTextString(m) }
func (*Scene) ProtoMessage()               {}
func (*Scene) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Scene) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*RenderRequest)(nil), "protos.RenderRequest")
	proto.RegisterType((*RenderResponse)(nil), "protos.RenderResponse")
	proto.RegisterType((*ImageComponent)(nil), "protos.ImageComponent")
	proto.RegisterType((*ImagePlane)(nil), "protos.ImagePlane")
	proto.RegisterType((*ImageFrame)(nil), "protos.ImageFrame")
	proto.RegisterType((*Node)(nil), "protos.Node")
	proto.RegisterType((*Component)(nil), "protos.Component")
	proto.RegisterType((*Parameter)(nil), "protos.Parameter")
	proto.RegisterType((*BoundingBox)(nil), "protos.BoundingBox")
	proto.RegisterType((*Scene)(nil), "protos.Scene")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Compute service

type ComputeClient interface {
	Render(ctx context.Context, in *RenderRequest, opts ...grpc.CallOption) (*RenderResponse, error)
}

type computeClient struct {
	cc *grpc.ClientConn
}

func NewComputeClient(cc *grpc.ClientConn) ComputeClient {
	return &computeClient{cc}
}

func (c *computeClient) Render(ctx context.Context, in *RenderRequest, opts ...grpc.CallOption) (*RenderResponse, error) {
	out := new(RenderResponse)
	err := grpc.Invoke(ctx, "/protos.Compute/Render", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Compute service

type ComputeServer interface {
	Render(context.Context, *RenderRequest) (*RenderResponse, error)
}

func RegisterComputeServer(s *grpc.Server, srv ComputeServer) {
	s.RegisterService(&_Compute_serviceDesc, srv)
}

func _Compute_Render_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputeServer).Render(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Compute/Render",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputeServer).Render(ctx, req.(*RenderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Compute_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Compute",
	HandlerType: (*ComputeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Render",
			Handler:    _Compute_Render_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "compute.proto",
}

func init() { proto.RegisterFile("compute.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 434 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x25, 0x4d, 0xd2, 0x55, 0x27, 0xb4, 0x12, 0xb3, 0xd0, 0x8d, 0x38, 0x55, 0xe6, 0xd2, 0xd3,
	0x4a, 0x94, 0x2f, 0x71, 0xed, 0xae, 0x90, 0xb8, 0xa0, 0x95, 0xb9, 0xec, 0x72, 0x59, 0xb9, 0xf5,
	0xa8, 0x8d, 0xd4, 0xd8, 0x25, 0x76, 0x61, 0xf7, 0x47, 0xf0, 0x9f, 0x51, 0xec, 0x38, 0xc9, 0x56,
	0x45, 0xe2, 0x14, 0xcf, 0xbc, 0xe7, 0xc9, 0x9b, 0xf1, 0x1b, 0x18, 0xaf, 0x75, 0xb9, 0x3f, 0x58,
	0xba, 0xdc, 0x57, 0xda, 0x6a, 0x1c, 0xba, 0x8f, 0x61, 0x7f, 0x22, 0x18, 0x73, 0x52, 0x92, 0x2a,
	0x4e, 0x3f, 0x0f, 0x64, 0x2c, 0xbe, 0x81, 0xd4, 0xac, 0x49, 0x51, 0x1e, 0xcd, 0xa2, 0x79, 0xb6,
	0x18, 0xfb, 0x0b, 0xe6, 0xf2, 0x7b, 0x9d, 0xe4, 0x1e, 0xc3, 0x19, 0x24, 0x4a, 0x4b, 0xca, 0x07,
	0x8e, 0xf3, 0x3c, 0x70, 0xbe, 0x69, 0x49, 0xdc, 0x21, 0xf8, 0x01, 0xb2, 0x95, 0x3e, 0x28, 0x59,
	0xa8, 0xcd, 0x52, 0x3f, 0xe4, 0xb1, 0x23, 0x9e, 0x07, 0xe2, 0xb2, 0x83, 0x78, 0x9f, 0xc7, 0xae,
	0x61, 0x12, 0xe4, 0x98, 0xbd, 0x56, 0x86, 0x70, 0x01, 0x50, 0x94, 0x62, 0x43, 0x37, 0x3b, 0xd1,
	0x8a, 0xc2, 0x50, 0xe7, 0x6b, 0x8b, 0xf0, 0x1e, 0x8b, 0x6d, 0x61, 0xe2, 0x90, 0x2b, 0x5d, 0xee,
	0xb5, 0x22, 0x65, 0xf1, 0x25, 0xa4, 0x3b, 0xb1, 0xa2, 0x9d, 0x2b, 0x30, 0xe2, 0x3e, 0xa8, 0xb3,
	0xbf, 0x0b, 0x69, 0xb7, 0xae, 0x8f, 0x94, 0xfb, 0x00, 0xa7, 0x30, 0xdc, 0x52, 0xb1, 0xd9, 0x5a,
	0xa7, 0x3a, 0xe5, 0x4d, 0x84, 0x08, 0x89, 0x14, 0x56, 0xe4, 0xc9, 0x2c, 0x9e, 0x47, 0xdc, 0x9d,
	0xd9, 0x0f, 0x80, 0x4e, 0xc3, 0x3f, 0xfe, 0xf2, 0x11, 0x60, 0x1d, 0x84, 0x98, 0x7c, 0x30, 0x8b,
	0xe7, 0xd9, 0x62, 0xfa, 0xa4, 0x83, 0x56, 0x27, 0xef, 0x31, 0xd9, 0xb2, 0xa9, 0xfd, 0xa5, 0x12,
	0x25, 0xe1, 0x7b, 0xc8, 0xba, 0x0e, 0x4d, 0x1e, 0xb9, 0x32, 0xa7, 0x06, 0xd1, 0xa7, 0xb1, 0x29,
	0x24, 0xf5, 0xa3, 0xe0, 0x04, 0x06, 0x85, 0x6c, 0x64, 0x0d, 0x0a, 0xc9, 0x3e, 0xc1, 0xe8, 0x3f,
	0x86, 0xf3, 0x4b, 0xec, 0x0e, 0xfe, 0x91, 0x23, 0xee, 0x03, 0xc6, 0x61, 0x74, 0x23, 0x6a, 0x41,
	0x96, 0xaa, 0x7a, 0x22, 0x4a, 0x94, 0xd4, 0xdc, 0x73, 0x67, 0x7c, 0x7b, 0xa2, 0xdb, 0x17, 0x41,
	0xe6, 0xe9, 0x46, 0x0b, 0xc8, 0x7a, 0x86, 0xc0, 0x0b, 0x38, 0x33, 0x56, 0x54, 0xf6, 0xfe, 0xc1,
	0x15, 0x8e, 0xf9, 0xd0, 0x85, 0xb7, 0x1d, 0xf0, 0xe8, 0x34, 0x05, 0xe0, 0x0e, 0xcf, 0x21, 0x25,
	0x25, 0xef, 0xbd, 0xcd, 0x62, 0x9e, 0x90, 0x92, 0xb7, 0x21, 0xf9, 0x98, 0x27, 0x6d, 0xf2, 0x8e,
	0x5d, 0x40, 0xea, 0x8c, 0x7c, 0x3c, 0x90, 0xc5, 0x35, 0x9c, 0x5d, 0xf9, 0x0d, 0xc1, 0xcf, 0x30,
	0xf4, 0x1e, 0xc4, 0x57, 0x41, 0xf7, 0x93, 0x15, 0x79, 0x3d, 0x3d, 0x4e, 0x7b, 0xab, 0xb2, 0x67,
	0x2b, 0xbf, 0x56, 0xef, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x26, 0x0a, 0xbd, 0x27, 0x6e, 0x03,
	0x00, 0x00,
}
