version: 2
jobs:
    build:
        docker:
            - image: docker:17

        working_directory: /workspace

        steps:
            - checkout
            - setup_remote_docker

            - run:
                name: Pull
                command: |
                    docker login -e ${DOCKER_EMAIL} -u ${DOCKER_USER} -p ${DOCKER_PASS}
                    docker pull ${DOCKER_USER}/qubit-builder || echo "Getting qubit-builder"

            - run:
                name: Build
                command: |
                    docker build --no-cache -t ${DOCKER_USER}/qubit-builder:${CIRCLE_SHA1} -t ${DOCKER_USER}/qubit-builder:latest ./builder/

            - run:
                name: Push
                command: |
                    docker push ${DOCKER_USER}/qubit-builder:${CIRCLE_SHA1}
                    docker push ${DOCKER_USER}/qubit-builder:latest

            - run:
                name: Trigger Containers Build
                command: |
                    docker run --rm ${DOCKER_USER}/qubit-builder:latest curl -u ${CIRCLE_API_TOKEN}: --data build_parameters[CIRCLE_JOB]=build_containers --data revision=${CIRCLE_SHA1} https://circleci.com/api/v1.1/project/github/stupschwartz/qubit/tree/${CIRCLE_BRANCH}

    build_containers:
        docker:
            - image: stuschwartz/qubit-builder:latest

        working_directory: /go/src/github.com/stupschwartz/qubit

        environment:
            TEST_RESULTS: /tmp/test-results

        steps:
            - checkout
            - setup_remote_docker

            - run:
                name: Authenticate GCloud
                command: scripts/auth-gcloud.sh

            # Build Organizations
            - run:
                name: Organizations - Start Go Build
                command: |
                    docker create -v /go -w /go/src/github.com/stupschwartz/qubit/services/organizations --name go-organizations-build-volumes alpine:3.4 /bin/true

            - run:
                name: Organizations - Copy Source to Container
                command: |
                    docker cp ./ go-organizations-build-volumes:/go/src/github.com/stupschwartz/qubit

            - run:
                name: Organizations - Build Go Code
                command: |
                    docker run --volumes-from go-organizations-build-volumes -w /go/src/github.com/stupschwartz/qubit/services/organizations golang:1.8 bash -c "go get ./...; go build -o run"

            - run:
                name: Organizations - Copy Back Artifacts
                command: |
                    docker cp go-organizations-build-volumes:/go/src/github.com/stupschwartz/qubit/services/organizations/run `pwd`/services/organizations/run

            - run:
                name: Organizations - Build Container
                command: |
                    gcloud docker -- build -t ${EXTERNALREGISTRYENDPOINT}/organizations:${CIRCLE_SHA1} ./services/organizations

            - run:
                name: Organizations - Push Container
                command: |
                    gcloud docker -- push ${EXTERNALREGISTRYENDPOINT}/organizations:${CIRCLE_SHA1}


            # Build Scenes
            - run:
                name: Scenes - Start Go Build
                command: |
                    docker create -v /go -w /go/src/github.com/stupschwartz/qubit/services/scenes --name go-scenes-build-volumes alpine:3.4 /bin/true

            - run:
                name: Scenes - Copy Source to Container
                command: |
                    docker cp ./ go-scenes-build-volumes:/go/src/github.com/stupschwartz/qubit

            - run:
                name: Scenes - Build Go Code
                command: |
                    docker run --volumes-from go-scenes-build-volumes -w /go/src/github.com/stupschwartz/qubit/services/scenes golang:1.8 bash -c "go get ./...; go build -o run"

            - run:
                name: Scenes - Copy Back Artifacts
                command: |
                    docker cp go-scenes-build-volumes:/go/src/github.com/stupschwartz/qubit/services/scenes/run `pwd`/services/scenes/run

            - run:
                name: Scenes - Build Container
                command: |
                    gcloud docker -- build -t ${EXTERNALREGISTRYENDPOINT}/scenes:${CIRCLE_SHA1} ./services/scenes

            - run:
                name: Scenes - Push Container
                command: |
                    gcloud docker -- push ${EXTERNALREGISTRYENDPOINT}/scenes:${CIRCLE_SHA1}

            # Build Operators
            - run:
                name: Operators - Start Go Build
                command: |
                    docker create -v /go -w /go/src/github.com/stupschwartz/qubit/services/operators --name go-operators-build-volumes alpine:3.4 /bin/true

            - run:
                name: Operators - Copy Source to Container
                command: |
                    docker cp ./ go-operators-build-volumes:/go/src/github.com/stupschwartz/qubit

            - run:
                name: Operators - Build Go Code
                command: |
                    docker run --volumes-from go-operators-build-volumes -w /go/src/github.com/stupschwartz/qubit/services/operators golang:1.8 bash -c "go get ./...; go build -o run"

            - run:
                name: Operators - Copy Back Artifacts
                command: |
                    docker cp go-operators-build-volumes:/go/src/github.com/stupschwartz/qubit/services/operators/run `pwd`/services/operators/run

            - run:
                name: Operators - Build Container
                command: |
                    gcloud docker -- build -t ${EXTERNALREGISTRYENDPOINT}/operators:${CIRCLE_SHA1} ./services/operators

            - run:
                name: Operators - Push Container
                command: |
                    gcloud docker -- push ${EXTERNALREGISTRYENDPOINT}/operators:${CIRCLE_SHA1}

            # Build Parameters
            - run:
                name: Parameters - Start Go Build
                command: |
                    docker create -v /go -w /go/src/github.com/stupschwartz/qubit/services/parameters --name go-parameters-build-volumes alpine:3.4 /bin/true

            - run:
                name: Parameters - Copy Source to Container
                command: |
                    docker cp ./ go-parameters-build-volumes:/go/src/github.com/stupschwartz/qubit

            - run:
                name: Parameters - Build Go Code
                command: |
                    docker run --volumes-from go-parameters-build-volumes -w /go/src/github.com/stupschwartz/qubit/services/parameters golang:1.8 bash -c "go get ./...; go build -o run"

            - run:
                name: Parameters - Copy Back Artifacts
                command: |
                    docker cp go-parameters-build-volumes:/go/src/github.com/stupschwartz/qubit/services/parameters/run `pwd`/services/parameters/run

            - run:
                name: Parameters - Build Container
                command: |
                    gcloud docker -- build -t ${EXTERNALREGISTRYENDPOINT}/parameters:${CIRCLE_SHA1} ./services/parameters

            - run:
                name: Parameters - Push Container
                command: |
                    gcloud docker -- push ${EXTERNALREGISTRYENDPOINT}/parameters:${CIRCLE_SHA1}

            # TRIGGER NEXT STEP
            - run:
                name: Trigger Containers Deployment
                command: |
                    curl -u ${CIRCLE_API_TOKEN}: --data build_parameters[CIRCLE_JOB]=deploy_containers --data revision=${CIRCLE_SHA1} https://circleci.com/api/v1.1/project/github/stupschwartz/qubit/tree/${CIRCLE_BRANCH}


    deploy_containers:
        docker:
            - image: stuschwartz/qubit-builder:latest

        working_directory: /go/src/github.com/stupschwartz/qubit

        environment:
            TEST_RESULTS: /tmp/test-results

        steps:
            - checkout
            - setup_remote_docker

            - run:
                name: Authenticate GCloud
                command: scripts/auth-gcloud.sh

            - run:
                name: Cluster Credentials
                command: |
                    gcloud container clusters get-credentials dev-cluster --zone us-central1-a

            - run:
                name: Deploy API Services
                command: ./deploy.sh
