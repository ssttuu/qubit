version: 2
jobs:
    build_base:
        docker:
            - image: stuschwartz/docker-git:latest
        working_directory: /workspace
        steps:
            - checkout
            - setup_remote_docker
            - run:
                name: Pull - Build - Push
                command: |
                    docker login -e ${DOCKER_EMAIL} -u ${DOCKER_USER} -p ${DOCKER_PASS}
                    if [ "$(ash scripts/files-changed.sh ${CIRCLE_BRANCH} builder)" != "0" ]; then
                        docker pull ${DOCKER_USER}/qubit-builder || echo "Getting qubit-builder"
                        docker build -t ${DOCKER_USER}/qubit-builder:${CIRCLE_SHA1} -t ${DOCKER_USER}/qubit-builder:latest ./builder/
                        docker push ${DOCKER_USER}/qubit-builder:${CIRCLE_SHA1}
                        docker push ${DOCKER_USER}/qubit-builder:latest
                    fi

    build_api:
        docker:
            - image: stuschwartz/qubit-builder:latest
        working_directory: /go/src/github.com/stupschwartz/qubit
        environment:
            TEST_RESULTS: /tmp/test-results
        steps:
            - checkout
            - setup_remote_docker
            - run:
                name: Authenticate GCloud
                command: scripts/auth-gcloud.sh
            - run:
                name: API - Start Go Build
                command: |
                    docker create -v /go -w /go/src/github.com/stupschwartz/qubit/applications/api/services/web --name go-api-build-volumes alpine:3.4 /bin/true
            - run:
                name: API - Copy Source to Container
                command: |
                    docker cp ./ go-api-build-volumes:/go/src/github.com/stupschwartz/qubit
            - run:
                name: API - Build Go Code
                command: |
                    docker run --volumes-from go-api-build-volumes -w /go/src/github.com/stupschwartz/qubit/applications/api/services/web golang:1.8 bash -c "go get ./...; go build -o run"
            - run:
                name: API - Copy Back Artifacts
                command: |
                    docker cp go-api-build-volumes:/go/src/github.com/stupschwartz/qubit/applications/api/services/web/run `pwd`/applications/api/services/web/run
            - run:
                name: API - Build Container
                command: |
                    gcloud docker -- build -t ${EXTERNALREGISTRYENDPOINT}/api:${CIRCLE_SHA1} ./applications/api/services/web
            - run:
                name: API - Push Container
                command: |
                    gcloud docker -- push ${EXTERNALREGISTRYENDPOINT}/api:${CIRCLE_SHA1}

    build_compute:
        docker:
            - image: stuschwartz/qubit-builder:latest
        working_directory: /go/src/github.com/stupschwartz/qubit
        environment:
            TEST_RESULTS: /tmp/test-results
        steps:
            - checkout
            - setup_remote_docker
            - run:
                name: Authenticate GCloud
                command: scripts/auth-gcloud.sh
            - run:
                name: Compute - Start Go Build
                command: |
                    docker create -v /go -w /go/src/github.com/stupschwartz/qubit/applications/compute/services/web --name go-compute-build-volumes alpine:3.4 /bin/true
            - run:
                name: Compute - Copy Source to Container
                command: |
                    docker cp ./ go-compute-build-volumes:/go/src/github.com/stupschwartz/qubit
            - run:
                name: Compute - Build Go Code
                command: |
                    docker run --volumes-from go-compute-build-volumes -w /go/src/github.com/stupschwartz/qubit/applications/compute/services/web golang:1.8 bash -c "go get ./...; go build -o run"
            - run:
                name: Compute - Copy Back Artifacts
                command: |
                    docker cp go-compute-build-volumes:/go/src/github.com/stupschwartz/qubit/applications/compute/services/web/run `pwd`/applications/compute/services/web/run
            - run:
                name: Compute - Build Container
                command: |
                    gcloud docker -- build -t ${EXTERNALREGISTRYENDPOINT}/compute:${CIRCLE_SHA1} ./applications/compute/services/web
            - run:
                name: Compute - Push Container
                command: |
                    gcloud docker -- push ${EXTERNALREGISTRYENDPOINT}/compute:${CIRCLE_SHA1}

    test_api:
        docker:
            - image: stuschwartz/qubit-builder:latest
        working_directory: /go/src/github.com/stupschwartz/qubit
        environment:
            TEST_RESULTS: /tmp/test-results
        steps:
            - checkout
            - setup_remote_docker

    test_compute:
        docker:
            - image: stuschwartz/qubit-builder:latest
        working_directory: /go/src/github.com/stupschwartz/qubit
        environment:
            TEST_RESULTS: /tmp/test-results
        steps:
            - checkout
            - setup_remote_docker

    deploy_test:
        docker:
            - image: stuschwartz/qubit-builder:latest
        branches:
            only:
                - master
        working_directory: /go/src/github.com/stupschwartz/qubit
        environment:
            TEST_RESULTS: /tmp/test-results
        steps:
            - checkout
            - setup_remote_docker
            - run:
                name: Authenticate GCloud
                command: scripts/auth-gcloud.sh
            - run:
                name: Cluster Credentials
                command: |
                    gcloud container clusters get-credentials dev-cluster --zone us-central1-a
            - run:
                name: Test Deploy
                command: TEST=true ./deploy.sh

    deploy:
        docker:
            - image: stuschwartz/qubit-builder:latest
        branches:
            only:
                - master
        working_directory: /go/src/github.com/stupschwartz/qubit
        environment:
            TEST_RESULTS: /tmp/test-results
        steps:
            - checkout
            - setup_remote_docker
            - run:
                name: Authenticate GCloud
                command: scripts/auth-gcloud.sh
            - run:
                name: Cluster Credentials
                command: |
                    gcloud container clusters get-credentials dev-cluster --zone us-central1-a
            - run:
                name: Deploy Services
                command: ./deploy.sh

workflows:
    version: 2
    build_test_deploy:
        jobs:
            - build_base
            - build_api:
                requires:
                    - build_base
            - build_compute:
                requires:
                    - build_base
            - test_api:
                requires:
                    - build_api
            - test_compute:
                requires:
                    - build_compute
            - deploy_test:
                requires:
                    - test_api
                    - test_compute
            - deploy:
                requires:
                    - deploy_test
                filters:
                    branches:
                        only: master
